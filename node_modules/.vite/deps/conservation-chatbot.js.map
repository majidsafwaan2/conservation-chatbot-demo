{
  "version": 3,
  "sources": ["../../@google/generative-ai/dist/index.mjs", "../../conservation-chatbot/dist/conservation-chatbot.es.js"],
  "sourcesContent": ["/**\n * Contains the list of OpenAPI data types\n * as defined by https://swagger.io/docs/specification/data-models/data-types/\n * @public\n */\nvar SchemaType;\n(function (SchemaType) {\n    /** String type. */\n    SchemaType[\"STRING\"] = \"string\";\n    /** Number type. */\n    SchemaType[\"NUMBER\"] = \"number\";\n    /** Integer type. */\n    SchemaType[\"INTEGER\"] = \"integer\";\n    /** Boolean type. */\n    SchemaType[\"BOOLEAN\"] = \"boolean\";\n    /** Array type. */\n    SchemaType[\"ARRAY\"] = \"array\";\n    /** Object type. */\n    SchemaType[\"OBJECT\"] = \"object\";\n})(SchemaType || (SchemaType = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @public\n */\nvar ExecutableCodeLanguage;\n(function (ExecutableCodeLanguage) {\n    ExecutableCodeLanguage[\"LANGUAGE_UNSPECIFIED\"] = \"language_unspecified\";\n    ExecutableCodeLanguage[\"PYTHON\"] = \"python\";\n})(ExecutableCodeLanguage || (ExecutableCodeLanguage = {}));\n/**\n * Possible outcomes of code execution.\n * @public\n */\nvar Outcome;\n(function (Outcome) {\n    /**\n     * Unspecified status. This value should not be used.\n     */\n    Outcome[\"OUTCOME_UNSPECIFIED\"] = \"outcome_unspecified\";\n    /**\n     * Code execution completed successfully.\n     */\n    Outcome[\"OUTCOME_OK\"] = \"outcome_ok\";\n    /**\n     * Code execution finished but with a failure. `stderr` should contain the\n     * reason.\n     */\n    Outcome[\"OUTCOME_FAILED\"] = \"outcome_failed\";\n    /**\n     * Code execution ran for too long, and was cancelled. There may or may not\n     * be a partial output present.\n     */\n    Outcome[\"OUTCOME_DEADLINE_EXCEEDED\"] = \"outcome_deadline_exceeded\";\n})(Outcome || (Outcome = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Possible roles.\n * @public\n */\nconst POSSIBLE_ROLES = [\"user\", \"model\", \"function\", \"system\"];\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    // Threshold is unspecified.\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    // Content with NEGLIGIBLE will be allowed.\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    // Content with NEGLIGIBLE and LOW will be allowed.\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    // Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    // All content will be allowed.\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n    // Probability is unspecified.\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    // Content has a negligible chance of being unsafe.\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    // Content has a low chance of being unsafe.\n    HarmProbability[\"LOW\"] = \"LOW\";\n    // Content has a medium chance of being unsafe.\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    // Content has a high chance of being unsafe.\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // The candidate content was flagged for using an unsupported language.\n    FinishReason[\"LANGUAGE\"] = \"LANGUAGE\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(FinishReason || (FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(TaskType || (TaskType = {}));\n/**\n * @public\n */\nvar FunctionCallingMode;\n(function (FunctionCallingMode) {\n    // Unspecified function calling mode. This value should not be used.\n    FunctionCallingMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Default model behavior, model decides to predict either a function call\n    // or a natural language repspose.\n    FunctionCallingMode[\"AUTO\"] = \"AUTO\";\n    // Model is constrained to always predicting a function call only.\n    // If \"allowed_function_names\" are set, the predicted function call will be\n    // limited to any one of \"allowed_function_names\", else the predicted\n    // function call will be any one of the provided \"function_declarations\".\n    FunctionCallingMode[\"ANY\"] = \"ANY\";\n    // Model will not predict any function call. Model behavior is same as when\n    // not passing any function declarations.\n    FunctionCallingMode[\"NONE\"] = \"NONE\";\n})(FunctionCallingMode || (FunctionCallingMode = {}));\n/**\n * The mode of the predictor to be used in dynamic retrieval.\n * @public\n */\nvar DynamicRetrievalMode;\n(function (DynamicRetrievalMode) {\n    // Unspecified function calling mode. This value should not be used.\n    DynamicRetrievalMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Run retrieval only when system decides it is necessary.\n    DynamicRetrievalMode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(DynamicRetrievalMode || (DynamicRetrievalMode = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Basic error type for this SDK.\n * @public\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\n/**\n * Errors in the contents of a response from the model. This includes parsing\n * errors, or responses including a safety block reason.\n * @public\n */\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n/**\n * Error class covering HTTP errors when calling the server. Includes HTTP\n * status, statusText, and optional details, if provided in the server response.\n * @public\n */\nclass GoogleGenerativeAIFetchError extends GoogleGenerativeAIError {\n    constructor(message, status, statusText, errorDetails) {\n        super(message);\n        this.status = status;\n        this.statusText = statusText;\n        this.errorDetails = errorDetails;\n    }\n}\n/**\n * Errors in the contents of a request originating from user input.\n * @public\n */\nclass GoogleGenerativeAIRequestInputError extends GoogleGenerativeAIError {\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst DEFAULT_API_VERSION = \"v1beta\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.21.0\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream, requestOptions) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n        this.requestOptions = requestOptions;\n    }\n    toString() {\n        var _a, _b;\n        const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION;\n        const baseUrl = ((_b = this.requestOptions) === null || _b === void 0 ? void 0 : _b.baseUrl) || DEFAULT_BASE_URL;\n        let url = `${baseUrl}/${apiVersion}/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders(requestOptions) {\n    const clientHeaders = [];\n    if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.apiClient) {\n        clientHeaders.push(requestOptions.apiClient);\n    }\n    clientHeaders.push(`${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`);\n    return clientHeaders.join(\" \");\n}\nasync function getHeaders(url) {\n    var _a;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"x-goog-api-client\", getClientHeaders(url.requestOptions));\n    headers.append(\"x-goog-api-key\", url.apiKey);\n    let customHeaders = (_a = url.requestOptions) === null || _a === void 0 ? void 0 : _a.customHeaders;\n    if (customHeaders) {\n        if (!(customHeaders instanceof Headers)) {\n            try {\n                customHeaders = new Headers(customHeaders);\n            }\n            catch (e) {\n                throw new GoogleGenerativeAIRequestInputError(`unable to convert customHeaders value ${JSON.stringify(customHeaders)} to Headers: ${e.message}`);\n            }\n        }\n        for (const [headerName, headerValue] of customHeaders.entries()) {\n            if (headerName === \"x-goog-api-key\") {\n                throw new GoogleGenerativeAIRequestInputError(`Cannot set reserved header name ${headerName}`);\n            }\n            else if (headerName === \"x-goog-api-client\") {\n                throw new GoogleGenerativeAIRequestInputError(`Header name ${headerName} can only be set using the apiClient field`);\n            }\n            headers.append(headerName, headerValue);\n        }\n    }\n    return headers;\n}\nasync function constructModelRequest(model, task, apiKey, stream, body, requestOptions) {\n    const url = new RequestUrl(model, task, apiKey, stream, requestOptions);\n    return {\n        url: url.toString(),\n        fetchOptions: Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \"POST\", headers: await getHeaders(url), body }),\n    };\n}\nasync function makeModelRequest(model, task, apiKey, stream, body, requestOptions = {}, \n// Allows this to be stubbed for tests\nfetchFn = fetch) {\n    const { url, fetchOptions } = await constructModelRequest(model, task, apiKey, stream, body, requestOptions);\n    return makeRequest(url, fetchOptions, fetchFn);\n}\nasync function makeRequest(url, fetchOptions, fetchFn = fetch) {\n    let response;\n    try {\n        response = await fetchFn(url, fetchOptions);\n    }\n    catch (e) {\n        handleResponseError(e, url);\n    }\n    if (!response.ok) {\n        await handleResponseNotOk(response, url);\n    }\n    return response;\n}\nfunction handleResponseError(e, url) {\n    let err = e;\n    if (!(e instanceof GoogleGenerativeAIFetchError ||\n        e instanceof GoogleGenerativeAIRequestInputError)) {\n        err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    throw err;\n}\nasync function handleResponseNotOk(response, url) {\n    let message = \"\";\n    let errorDetails;\n    try {\n        const json = await response.json();\n        message = json.error.message;\n        if (json.error.details) {\n            message += ` ${JSON.stringify(json.error.details)}`;\n            errorDetails = json.error.details;\n        }\n    }\n    catch (e) {\n        // ignored\n    }\n    throw new GoogleGenerativeAIFetchError(`Error fetching from ${url.toString()}: [${response.status} ${response.statusText}] ${message}`, response.status, response.statusText, errorDetails);\n}\n/**\n * Generates the request options to be passed to the fetch API.\n * @param requestOptions - The user-defined request options.\n * @returns The generated request options.\n */\nfunction buildFetchOptions(requestOptions) {\n    const fetchOptions = {};\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) !== undefined || (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const controller = new AbortController();\n        if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n            setTimeout(() => controller.abort(), requestOptions.timeout);\n        }\n        if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) {\n            requestOptions.signal.addEventListener(\"abort\", () => {\n                controller.abort();\n            });\n        }\n        fetchOptions.signal = controller.signal;\n    }\n    return fetchOptions;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    /**\n     * TODO: remove at next major version\n     */\n    response.functionCall = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            console.warn(`response.functionCall() is deprecated. ` +\n                `Use response.functionCalls() instead.`);\n            return getFunctionCalls(response)[0];\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    response.functionCalls = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getFunctionCalls(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    return response;\n}\n/**\n * Returns all text found in all parts of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    const textStrings = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.text) {\n                textStrings.push(part.text);\n            }\n            if (part.executableCode) {\n                textStrings.push(\"\\n```\" +\n                    part.executableCode.language +\n                    \"\\n\" +\n                    part.executableCode.code +\n                    \"\\n```\\n\");\n            }\n            if (part.codeExecutionResult) {\n                textStrings.push(\"\\n```\\n\" + part.codeExecutionResult.output + \"\\n```\\n\");\n            }\n        }\n    }\n    if (textStrings.length > 0) {\n        return textStrings.join(\"\");\n    }\n    else {\n        return \"\";\n    }\n}\n/**\n * Returns functionCall of first candidate.\n */\nfunction getFunctionCalls(response) {\n    var _a, _b, _c, _d;\n    const functionCalls = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.functionCall) {\n                functionCalls.push(part.functionCall);\n            }\n        }\n    }\n    if (functionCalls.length > 0) {\n        return functionCalls;\n    }\n    else {\n        return undefined;\n    }\n}\nconst badFinishReasons = [\n    FinishReason.RECITATION,\n    FinishReason.SAFETY,\n    FinishReason.LANGUAGE,\n];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader.read().then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            for (const candidate of response.candidates) {\n                const i = candidate.index;\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[i]) {\n                    aggregatedResponse.candidates[i] = {\n                        index: candidate.index,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[i].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[i].groundingMetadata =\n                    candidate.groundingMetadata;\n                aggregatedResponse.candidates[i].finishReason = candidate.finishReason;\n                aggregatedResponse.candidates[i].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[i].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[i].content) {\n                        aggregatedResponse.candidates[i].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [],\n                        };\n                    }\n                    const newPart = {};\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            newPart.text = part.text;\n                        }\n                        if (part.functionCall) {\n                            newPart.functionCall = part.functionCall;\n                        }\n                        if (part.executableCode) {\n                            newPart.executableCode = part.executableCode;\n                        }\n                        if (part.codeExecutionResult) {\n                            newPart.codeExecutionResult = part.codeExecutionResult;\n                        }\n                        if (Object.keys(newPart).length === 0) {\n                            newPart.text = \"\";\n                        }\n                        aggregatedResponse.candidates[i].content.parts.push(newPart);\n                    }\n                }\n            }\n        }\n        if (response.usageMetadata) {\n            aggregatedResponse.usageMetadata = response.usageMetadata;\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true, JSON.stringify(params), requestOptions);\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false, JSON.stringify(params), requestOptions);\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatSystemInstruction(input) {\n    // null or undefined\n    if (input == null) {\n        return undefined;\n    }\n    else if (typeof input === \"string\") {\n        return { role: \"system\", parts: [{ text: input }] };\n    }\n    else if (input.text) {\n        return { role: \"system\", parts: [input] };\n    }\n    else if (input.parts) {\n        if (!input.role) {\n            return { role: \"system\", parts: input.parts };\n        }\n        else {\n            return input;\n        }\n    }\n}\nfunction formatNewContent(request) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return assignRoleToPartsAndValidateSendMessageRequest(newParts);\n}\n/**\n * When multiple Part types (i.e. FunctionResponsePart and TextPart) are\n * passed in a single Part array, we may need to assign different roles to each\n * part. Currently only FunctionResponsePart requires a role other than 'user'.\n * @private\n * @param parts Array of parts to pass to the model\n * @returns Array of content items\n */\nfunction assignRoleToPartsAndValidateSendMessageRequest(parts) {\n    const userContent = { role: \"user\", parts: [] };\n    const functionContent = { role: \"function\", parts: [] };\n    let hasUserContent = false;\n    let hasFunctionContent = false;\n    for (const part of parts) {\n        if (\"functionResponse\" in part) {\n            functionContent.parts.push(part);\n            hasFunctionContent = true;\n        }\n        else {\n            userContent.parts.push(part);\n            hasUserContent = true;\n        }\n    }\n    if (hasUserContent && hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.\");\n    }\n    if (!hasUserContent && !hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"No content is provided for sending chat message.\");\n    }\n    if (hasUserContent) {\n        return userContent;\n    }\n    return functionContent;\n}\nfunction formatCountTokensInput(params, modelParams) {\n    var _a;\n    let formattedGenerateContentRequest = {\n        model: modelParams === null || modelParams === void 0 ? void 0 : modelParams.model,\n        generationConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.generationConfig,\n        safetySettings: modelParams === null || modelParams === void 0 ? void 0 : modelParams.safetySettings,\n        tools: modelParams === null || modelParams === void 0 ? void 0 : modelParams.tools,\n        toolConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.toolConfig,\n        systemInstruction: modelParams === null || modelParams === void 0 ? void 0 : modelParams.systemInstruction,\n        cachedContent: (_a = modelParams === null || modelParams === void 0 ? void 0 : modelParams.cachedContent) === null || _a === void 0 ? void 0 : _a.name,\n        contents: [],\n    };\n    const containsGenerateContentRequest = params.generateContentRequest != null;\n    if (params.contents) {\n        if (containsGenerateContentRequest) {\n            throw new GoogleGenerativeAIRequestInputError(\"CountTokensRequest must have one of contents or generateContentRequest, not both.\");\n        }\n        formattedGenerateContentRequest.contents = params.contents;\n    }\n    else if (containsGenerateContentRequest) {\n        formattedGenerateContentRequest = Object.assign(Object.assign({}, formattedGenerateContentRequest), params.generateContentRequest);\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedGenerateContentRequest.contents = [content];\n    }\n    return { generateContentRequest: formattedGenerateContentRequest };\n}\nfunction formatGenerateContentInput(params) {\n    let formattedRequest;\n    if (params.contents) {\n        formattedRequest = params;\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedRequest = { contents: [content] };\n    }\n    if (params.systemInstruction) {\n        formattedRequest.systemInstruction = formatSystemInstruction(params.systemInstruction);\n    }\n    return formattedRequest;\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params);\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://ai.google.dev/api/rest/v1beta/Content#part\nconst VALID_PART_FIELDS = [\n    \"text\",\n    \"inlineData\",\n    \"functionCall\",\n    \"functionResponse\",\n    \"executableCode\",\n    \"codeExecutionResult\",\n];\nconst VALID_PARTS_PER_ROLE = {\n    user: [\"text\", \"inlineData\"],\n    function: [\"functionResponse\"],\n    model: [\"text\", \"functionCall\", \"executableCode\", \"codeExecutionResult\"],\n    // System instructions shouldn't be in history anyway.\n    system: [\"text\"],\n};\nfunction validateChatHistory(history) {\n    let prevContent = false;\n    for (const currContent of history) {\n        const { role, parts } = currContent;\n        if (!prevContent && role !== \"user\") {\n            throw new GoogleGenerativeAIError(`First content should be with role 'user', got ${role}`);\n        }\n        if (!POSSIBLE_ROLES.includes(role)) {\n            throw new GoogleGenerativeAIError(`Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`);\n        }\n        if (!Array.isArray(parts)) {\n            throw new GoogleGenerativeAIError(\"Content should have 'parts' property with an array of Parts\");\n        }\n        if (parts.length === 0) {\n            throw new GoogleGenerativeAIError(\"Each Content should have at least one part\");\n        }\n        const countFields = {\n            text: 0,\n            inlineData: 0,\n            functionCall: 0,\n            functionResponse: 0,\n            fileData: 0,\n            executableCode: 0,\n            codeExecutionResult: 0,\n        };\n        for (const part of parts) {\n            for (const key of VALID_PART_FIELDS) {\n                if (key in part) {\n                    countFields[key] += 1;\n                }\n            }\n        }\n        const validParts = VALID_PARTS_PER_ROLE[role];\n        for (const key of VALID_PART_FIELDS) {\n            if (!validParts.includes(key) && countFields[key] > 0) {\n                throw new GoogleGenerativeAIError(`Content with role '${role}' can't contain '${key}' part`);\n            }\n        }\n        prevContent = true;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params, _requestOptions = {}) {\n        this.model = model;\n        this.params = params;\n        this._requestOptions = _requestOptions;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            validateChatHistory(params.history);\n            this._history = params.history;\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessage(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions))\n            .then((result) => {\n            var _a;\n            if (result.response.candidates &&\n                result.response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessageStream(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (response.candidates && response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params, singleRequestOptions) {\n    const response = await makeModelRequest(model, Task.COUNT_TOKENS, apiKey, false, JSON.stringify(params), singleRequestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.EMBED_CONTENT, apiKey, false, JSON.stringify(params), requestOptions);\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params, requestOptions) {\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model });\n    });\n    const response = await makeModelRequest(model, Task.BATCH_EMBED_CONTENTS, apiKey, false, JSON.stringify({ requests: requestsWithModel }), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams, _requestOptions = {}) {\n        this.apiKey = apiKey;\n        this._requestOptions = _requestOptions;\n        if (modelParams.model.includes(\"/\")) {\n            // Models may be named \"models/model-name\" or \"tunedModels/model-name\"\n            this.model = modelParams.model;\n        }\n        else {\n            // If path is not included, assume it's a non-tuned model.\n            this.model = `models/${modelParams.model}`;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n        this.tools = modelParams.tools;\n        this.toolConfig = modelParams.toolConfig;\n        this.systemInstruction = formatSystemInstruction(modelParams.systemInstruction);\n        this.cachedContent = modelParams.cachedContent;\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContent(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Makes a single streaming call to the model and returns an object\n     * containing an iterable stream that iterates over all chunks in the\n     * streaming response as well as a promise that returns the final\n     * aggregated response.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContentStream(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        var _a;\n        return new ChatSession(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, startChatParams), this._requestOptions);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async countTokens(request, requestOptions = {}) {\n        const formattedParams = formatCountTokensInput(request, {\n            model: this.model,\n            generationConfig: this.generationConfig,\n            safetySettings: this.safetySettings,\n            tools: this.tools,\n            toolConfig: this.toolConfig,\n            systemInstruction: this.systemInstruction,\n            cachedContent: this.cachedContent,\n        });\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return countTokens(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds the provided content.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async embedContent(request, requestOptions = {}) {\n        const formattedParams = formatEmbedContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return embedContent(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async batchEmbedContents(batchEmbedContentRequest, requestOptions = {}) {\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest, generativeModelRequestOptions);\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams, requestOptions) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams, requestOptions);\n    }\n    /**\n     * Creates a {@link GenerativeModel} instance from provided content cache.\n     */\n    getGenerativeModelFromCachedContent(cachedContent, modelParams, requestOptions) {\n        if (!cachedContent.name) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `name` field.\");\n        }\n        if (!cachedContent.model) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `model` field.\");\n        }\n        /**\n         * Not checking tools and toolConfig for now as it would require a deep\n         * equality comparison and isn't likely to be a common case.\n         */\n        const disallowedDuplicates = [\"model\", \"systemInstruction\"];\n        for (const key of disallowedDuplicates) {\n            if ((modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) &&\n                cachedContent[key] &&\n                (modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) !== cachedContent[key]) {\n                if (key === \"model\") {\n                    const modelParamsComp = modelParams.model.startsWith(\"models/\")\n                        ? modelParams.model.replace(\"models/\", \"\")\n                        : modelParams.model;\n                    const cachedContentComp = cachedContent.model.startsWith(\"models/\")\n                        ? cachedContent.model.replace(\"models/\", \"\")\n                        : cachedContent.model;\n                    if (modelParamsComp === cachedContentComp) {\n                        continue;\n                    }\n                }\n                throw new GoogleGenerativeAIRequestInputError(`Different value for \"${key}\" specified in modelParams` +\n                    ` (${modelParams[key]}) and cachedContent (${cachedContent[key]})`);\n            }\n        }\n        const modelParamsFromCache = Object.assign(Object.assign({}, modelParams), { model: cachedContent.model, tools: cachedContent.tools, toolConfig: cachedContent.toolConfig, systemInstruction: cachedContent.systemInstruction, cachedContent });\n        return new GenerativeModel(this.apiKey, modelParamsFromCache, requestOptions);\n    }\n}\n\nexport { BlockReason, ChatSession, DynamicRetrievalMode, ExecutableCodeLanguage, FinishReason, FunctionCallingMode, GenerativeModel, GoogleGenerativeAI, GoogleGenerativeAIError, GoogleGenerativeAIFetchError, GoogleGenerativeAIRequestInputError, GoogleGenerativeAIResponseError, HarmBlockThreshold, HarmCategory, HarmProbability, Outcome, POSSIBLE_ROLES, SchemaType, TaskType };\n//# sourceMappingURL=index.mjs.map\n", "import { GoogleGenerativeAI as K } from \"@google/generative-ai\";\nconst G = \"AIzaSyAH8coSXAFQolBXBg_JdSPn1e6h2MQCTk0\", $ = \"gemini-1.5-flash\";\nfunction H(n, e, a, h) {\n  const { name: i, species: m, conservationStatus: d, location: b } = n;\n  let r = `You are ${i}, a ${m} who lives in ${b}. Your primary goal is to educate people and inspire them to act for conservation. You are ${d}.`;\n  return a ? r += ` Your personality is: \"${a}\".` : r += ` Adopt the charming and characteristic personality of a ${m}.`, h && h.length > 0 && (r += ` You know these key facts about yourself and your species: ${h.join(\". \")}. Incorporate these naturally when relevant.`), r += \" Speak directly as the animal. Use a warm, engaging, and slightly playful tone. Be concise and keep your responses short, ideally under 2-3 sentences. Focus on high-impact information related to your life, threats, or how humans can help. Avoid verbose greetings or closings.\", r += `\n\nUser asks: \"${e}\"`, r += `\n${i} responds:`, r;\n}\nfunction Y({ animal: n, photo: e, customPersonality: a, facts: h, userPromptHook: i }) {\n  if (!n || !n.name || !n.species || !n.conservationStatus || !n.location)\n    throw new Error(\"Invalid 'animal' object provided. It must contain name, species, conservationStatus, and location.\");\n  e || console.warn(\"No 'photo' provided for the chatbot. The UI may not display an avatar.\");\n  const d = new K(G).getGenerativeModel({ model: $ });\n  return {\n    respondTo: async (v) => {\n      let y = v;\n      i && (y = i(v));\n      const t = H(n, y, a, h);\n      try {\n        return (await (await d.generateContent({\n          contents: [{ role: \"user\", parts: [{ text: t }] }],\n          generationConfig: {\n            maxOutputTokens: 100,\n            // <<< New: Limit response length (adjust as needed)\n            temperature: 0.7,\n            // <<< New: Control creativity (0.0 for factual, 1.0 for more creative)\n            topP: 0.9,\n            // <<< New: Control diversity\n            topK: 40\n            // <<< New: Control diversity\n          }\n        })).response).text();\n      } catch (c) {\n        return console.error(\"Error communicating with Gemini API:\", c), c.name === \"GoogleGenerativeAIFetchError\" && c.message.includes(\"404\") ? (console.error(`Attempted model: \"${$}\"`), `I'm sorry, the AI model I need (${$}) isn't available or configured correctly. Please check your API key and try again.`) : \"I'm sorry, I'm having a little trouble communicating right now. Please try again later!\";\n      }\n    },\n    getAnimalName: () => n.name,\n    getAnimalPhoto: () => e\n  };\n}\nconst O = `\n    /* Base styles for the main container of the chatbot */\n    #conservation-chatbot-container {\n        font-family: Arial, sans-serif;\n        position: fixed; /* Positions the chat window relative to the viewport */\n        bottom: 20px;    /* 20px from the bottom edge of the viewport */\n        right: 20px;     /* 20px from the right edge of the viewport */\n        width: 320px;    /* Fixed width for the chat window */\n        height: 450px;   /* Fixed height for the chat window */\n        border: 1px solid rgba(255, 255, 255, 0.3); /* Soft, semi-transparent white border for glass effect */\n        border-radius: 12px; /* Rounded corners for a modern, glassy look */\n        \n        /* Core \"Liquid Glass\" effect properties */\n        background: rgba(255, 255, 255, 0.2); /* Semi-transparent white background */\n        backdrop-filter: blur(10px) saturate(180%); /* Blurs and saturates content behind the element */\n        -webkit-backdrop-filter: blur(10px) saturate(180%); /* Vendor prefix for Safari compatibility */\n        \n        /* Box shadow for depth and an inner highlight */\n        box-shadow: 0 4px 12px rgba(0,0,0,0.2), inset 0 0 0 1px rgba(255, 255, 255, 0.1);\n        \n        /* Initial state for animations (hidden and scaled down) */\n        display: none; /* Starts hidden to prevent flash of unstyled content */\n        flex-direction: column; /* Arranges content vertically when visible */\n        overflow: hidden; /* Hides content that overflows the container */\n        \n        /* Transition properties for smooth expand/collapse animation */\n        transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;\n        transform: translateY(100%) scale(0.8); /* Starts off-screen (bottom) and slightly smaller */\n        opacity: 0; /* Starts fully transparent */\n        pointer-events: none; /* Prevents interaction when hidden */\n        z-index: 10000; /* Ensures the chatbot is on top of most other page content */\n    }\n\n    /* Styles for when the chat window is in its expanded (visible) state */\n    #conservation-chatbot-container.expanded {\n        display: flex; /* Makes the chat window visible (overrides display: none) */\n        transform: translateY(0) scale(1); /* Moves into view and to full size */\n        opacity: 1; /* Makes it fully opaque */\n        pointer-events: all; /* Allows interaction */\n    }\n\n    /* Styles for the collapsed chatbot \"launcher\" button (the small circle) */\n    #conservation-chatbot-launcher {\n        position: fixed; /* Positions the launcher relative to the viewport */\n        bottom: 20px;    /* Same bottom position as the chat window */\n        right: 20px;     /* Same right position as the chat window */\n        width: 60px;     /* Width of the circular launcher */\n        height: 60px;    /* Height of the circular launcher */\n        border-radius: 50%; /* Makes the element a perfect circle */\n        background-color: #222;\n        display: flex;   /* Uses flexbox for centering content */\n        justify-content: center; /* Centers content horizontally */\n        align-items: center; /* Centers content vertically */\n        cursor: pointer; /* Changes cursor to a pointer on hover, indicating interactivity */\n        box-shadow: 0 2px 10px rgba(0,0,0,0.2); /* Shadow for a floating effect */\n        transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out; /* Smooth hide/show animation */\n        z-index: 10001; /* Ensures the launcher is above the chat window when collapsed */\n    }\n\n    /* Styles for when the launcher is hidden (chat window is open) */\n    #conservation-chatbot-launcher.hidden {\n        opacity: 0; /* Makes the launcher fully transparent */\n        pointer-events: none; /* Prevents interaction when hidden */\n        transform: scale(0.5); /* Shrinks the launcher slightly as it disappears */\n    }\n\n    /* Styles for the animal photo within the launcher button */\n    #conservation-chatbot-launcher img {\n        width: 50px; /* Size of the animal photo */\n        height: 50px; /* Size of the animal photo */\n        border-radius: 50%; /* Makes the photo circular */\n        object-fit: cover; /* Ensures the image covers the area without distortion */\n        border: 2px solid white; /* A white border around the photo */\n    }\n\n    /* Styles for the header section of the chat window */\n    .conservation-chatbot-header {\n        display: flex;\n        align-items: center;\n        padding: 10px;\n        background-color: #222;\n        color: white;\n        border-top-left-radius: 10px;\n        border-top-right-radius: 10px;\n        justify-content: space-between;\n        border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n        box-shadow: 0 1px 0 rgba(255, 255, 255, 0.1) inset;\n    }\n\n    /* Groups the avatar and title in the header */\n    .conservation-chatbot-header .title-group {\n        display: flex;\n        align-items: center;\n        flex: 1;\n    }\n\n    /* Chatbot title (animal's name) in the header */\n    .conservation-chatbot-header h3 {\n        margin: 0; /* Removes default margin */\n        font-size: 16px; /* Font size for the title */\n        white-space: nowrap; /* Prevents text from wrapping */\n        overflow: hidden; /* Hides overflowing text */\n        text-overflow: ellipsis; /* Adds ellipsis if text overflows */\n    }\n\n    /* Avatar within the chat window header */\n    .conservation-chatbot-avatar {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        object-fit: cover;\n        margin-right: 10px;\n        border: 2px solid rgba(255, 255, 255, 0.8); /* Slightly transparent white border */\n    }\n\n    /* Animal selection dropdown styles */\n    .conservation-chatbot-animal-select {\n        background: rgba(255, 255, 255, 0.2);\n        border: 1px solid rgba(255, 255, 255, 0.3);\n        border-radius: 6px;\n        color: white;\n        padding: 4px 8px;\n        font-size: 14px;\n        cursor: pointer;\n        margin-left: 20px;\n        margin-right: 0;\n        backdrop-filter: blur(5px);\n        -webkit-backdrop-filter: blur(5px);\n    }\n\n    .conservation-chatbot-animal-select option {\n        background: #222;\n        color: white;\n    }\n\n    .conservation-chatbot-animal-select:focus {\n        outline: none;\n        border-color: rgba(255, 255, 255, 0.6);\n    }\n\n    /* Close button in the chat header */\n    .conservation-chatbot-close-button {\n        background: none; /* No background */\n        border: none; /* No border */\n        color: white; /* White 'x' symbol */\n        font-size: 24px; /* Large font size for visibility */\n        cursor: pointer; /* Pointer cursor on hover */\n        line-height: 1; /* Ensures 'x' is vertically centered */\n        margin-left: auto; /* Pushes button to the far right */\n        padding: 0; /* Removes default padding */\n    }\n\n    .conservation-chatbot-close-button:hover {\n        opacity: 0.8; /* Slight fade on hover */\n    }\n\n    /* Container for chat messages */\n    .conservation-chatbot-messages {\n        flex-grow: 1; /* Allows this section to take up available vertical space */\n        overflow-y: auto; /* Enables vertical scrolling if messages overflow */\n        padding: 10px; /* Padding inside the messages area */\n        display: flex;\n        flex-direction: column; /* Stacks messages vertically */\n        gap: 8px; /* Space between individual messages */\n        background-color: transparent; /* Makes background transparent to show backdrop-filter */\n    }\n\n    /* Base styles for individual chat messages */\n    .conservation-chatbot-message {\n        max-width: 75%; /* Limits message width to 75% of container */\n        padding: 8px 12px; /* Padding inside the message bubble */\n        border-radius: 18px; /* Rounded corners for message bubbles */\n        word-wrap: break-word; /* Wraps long words */\n        white-space: pre-wrap; /* Preserves whitespace and line breaks */\n    }\n\n    /* Styles for chatbot's messages */\n    .conservation-chatbot-message.bot {\n        align-self: flex-start;\n        background-color: #f1f1f1;\n        color: #333;\n        border-bottom-left-radius: 4px;\n        border: 1px solid rgba(255, 255, 255, 0.5);\n        box-shadow: 0 1px 2px rgba(0,0,0,0.05);\n    }\n\n    /* Styles for user's messages */\n    .conservation-chatbot-message.user {\n        align-self: flex-end;\n        background-color: #222;\n        color: white;\n        border-bottom-right-radius: 4px;\n        border: 1px solid rgba(255, 255, 255, 0.3);\n        box-shadow: 0 1px 2px rgba(0,0,0,0.05);\n    }\n\n    /* Container for the input field and send button */\n    .conservation-chatbot-input-container {\n        display: flex; /* Uses flexbox */\n        flex-wrap: wrap; /* Allows items (prompts, input) to wrap to new lines */\n        padding: 10px; /* Padding around input elements */\n        border-top: 1px solid rgba(255, 255, 255, 0.3); /* Translucent top border */\n        background-color: rgba(255, 255, 255, 0.3); /* Translucent input background */\n        backdrop-filter: blur(5px); /* Applies blur to the input area too */\n        -webkit-backdrop-filter: blur(5px); /* Safari prefix */\n        border-bottom-left-radius: 8px; /* Matches container's border-radius */\n        border-bottom-right-radius: 8px; /* Matches container's border-radius */\n        gap: 8px; /* Space between flex items */\n    }\n\n    /* Container for default prompt buttons */\n    .conservation-chatbot-default-prompts {\n        width: 100%; /* Takes full width of its parent container */\n        display: flex;\n        flex-wrap: wrap; /* Allows buttons to wrap to new line */\n        gap: 5px; /* Space between prompt buttons */\n        justify-content: center; /* Centers the buttons horizontally */\n        margin-bottom: 5px; /* Space below prompt buttons */\n        transition: opacity 0.3s ease; /* For smooth disabling effect */\n    }\n\n    /* Styling for individual default prompt buttons */\n    .conservation-chatbot-default-prompts .default-prompt-btn {\n        background-color: #444;\n        color: white;\n        border: 1px solid rgba(255, 255, 255, 0.3);\n        border-radius: 15px;\n        padding: 6px 12px;\n        font-size: 13px;\n        cursor: pointer;\n        transition: background-color 0.2s ease, opacity 0.2s ease;\n        flex-shrink: 0;\n        white-space: nowrap;\n    }\n\n    .conservation-chatbot-default-prompts .default-prompt-btn:hover {\n        background-color: #666;\n    }\n\n    .conservation-chatbot-default-prompts .default-prompt-btn:active {\n        transform: translateY(1px); /* Simple press down effect on click */\n    }\n\n    .conservation-chatbot-default-prompts .default-prompt-btn:disabled {\n        background-color: rgba(106, 13, 173, 0.3); /* Lighter, less opaque when disabled */\n        cursor: not-allowed; /* Not-allowed cursor when disabled */\n    }\n\n    /* Chat input field */\n    .conservation-chatbot-input {\n        flex-grow: 1; /* Allows input to take up available horizontal space */\n        padding: 8px; /* Padding inside the input field */\n        border: 1px solid rgba(255, 255, 255, 0.5); /* Semi-transparent border */\n        background-color: rgba(255, 255, 255, 0.6); /* Slightly more opaque background for input */\n        color: #333; /* Dark text for input */\n        border-radius: 20px; /* Rounded input field */\n        margin-right: 8px; /* Space between input and send button */\n        margin-left: 2px; /* Move input 2px to the right */\n        font-size: 14px; /* Font size for input text */\n        outline: none; /* Removes outline on focus */\n        min-width: 0; /* Allows the input field to shrink on smaller screens */\n    }\n\n    /* Placeholder text style for the input field */\n    .conservation-chatbot-input::placeholder {\n        color: rgba(0,0,0,0.5); /* Semi-transparent placeholder text */\n    }\n\n    /* Send button styles */\n    .conservation-chatbot-send-button {\n        background-color: #222;\n        color: white;\n        border: none;\n        border-radius: 20px;\n        padding: 8px 15px;\n        cursor: pointer;\n        font-size: 14px;\n        transition: background-color 0.2s ease;\n        flex-shrink: 0;\n    }\n\n    .conservation-chatbot-send-button:hover {\n        background-color: #444;\n    }\n\n    .conservation-chatbot-send-button:disabled {\n        background-color: #cccccc;\n        cursor: not-allowed;\n    }\n\n    /* Thinking Indicator (typing animation) */\n    .conservation-chatbot-message.bot.thinking {\n        display: inline-flex; /* Uses flex to align dots horizontally */\n        align-items: center; /* Centers dots vertically */\n        /* Reuses styles from .conservation-chatbot-message.bot for consistency */\n        background-color: rgba(255, 255, 255, 0.4);\n        color: #333;\n        border-bottom-left-radius: 4px;\n        border: 1px solid rgba(255, 255, 255, 0.5);\n        box-shadow: 0 1px 2px rgba(0,0,0,0.05);\n        padding: 8px 12px;\n        max-width: 75%;\n        align-self: flex-start;\n        border-radius: 18px;\n    }\n\n    .conservation-chatbot-message.bot.thinking .dot {\n        width: 8px;      /* Size of each dot */\n        height: 8px;     /* Size of each dot */\n        background-color: #555; /* Color of the dots */\n        border-radius: 50%; /* Makes dots circular */\n        margin: 0 2px;   /* Space between dots */\n        animation: blink 1.4s infinite ease-in-out both; /* Applies blinking animation */\n    }\n\n    /* Individual animation delays for cascading blink effect */\n    .conservation-chatbot-message.bot.thinking .dot:nth-child(1) { animation-delay: 0s; }\n    .conservation-chatbot-message.bot.thinking .dot:nth-child(2) { animation-delay: 0.2s; }\n    .conservation-chatbot-message.bot.thinking .dot:nth-child(3) { animation-delay: 0.4s; }\n\n    /* Keyframes for the blinking animation */\n    @keyframes blink {\n        0%, 80%, 100% { opacity: 0; } /* Invisible at start, 80%, and end */\n        40% { opacity: 1; } /* Fully visible at 40% of animation */\n    }\n\n    .conservation-chatbot-heart-button {\n        margin-right: 0;\n        height: 32px; /* Reduced height to remove bottom sliver */\n        clip-path: polygon(0 0, 100% 0, 100% 90%, 0 90%); /* Clip bottom 10% */\n    }\n`;\nfunction B(n, e, a) {\n  if (!n) {\n    console.error(\"Conservation Chatbot: Container element not found for chatbot UI. Please provide a valid HTMLElement.\");\n    return;\n  }\n  if (!Array.isArray(e) || e.length === 0) {\n    console.error(\"Conservation Chatbot: Invalid animals array provided. Please provide a non-empty array of animals.\");\n    return;\n  }\n  if (typeof a != \"function\") {\n    console.error(\"Conservation Chatbot: Invalid createChatbotInstance function provided. Please provide a function that creates chatbot instances.\");\n    return;\n  }\n  if (!document.getElementById(\"conservation-chatbot-styles\")) {\n    const o = document.createElement(\"style\");\n    o.id = \"conservation-chatbot-styles\", o.textContent = O, document.head.appendChild(o);\n  }\n  let h = 0, i = a(e[h]);\n  const m = document.createElement(\"div\");\n  m.id = \"conservation-chatbot-launcher\";\n  const d = document.createElement(\"img\");\n  d.src = i.getAnimalPhoto(), d.alt = `${i.getAnimalName()} Avatar`, m.appendChild(d), document.body.appendChild(m);\n  const b = document.createElement(\"div\");\n  b.id = \"conservation-chatbot-container\";\n  const r = document.createElement(\"div\");\n  r.className = \"conservation-chatbot-header\";\n  const u = document.createElement(\"div\");\n  u.className = \"title-group\";\n  const v = document.createElement(\"img\");\n  v.src = i.getAnimalPhoto(), v.alt = `${i.getAnimalName()} Avatar`, v.className = \"conservation-chatbot-avatar\", v.style.marginRight = \"3px\";\n  const y = document.createElement(\"select\");\n  y.className = \"conservation-chatbot-animal-select\", y.style.marginLeft = \"3px\", y.style.minWidth = \"unset\", y.style.padding = \"4px 6px\", e.forEach((o, s) => {\n    const p = document.createElement(\"option\");\n    p.value = s, p.textContent = `Talk to ${o.name}`, s === h && (p.selected = !0), y.appendChild(p);\n  });\n  const t = document.createElement(\"button\");\n  t.className = \"conservation-chatbot-heart-button\", t.innerHTML = \"♥\", t.title = \"Show your love!\", t.style.marginLeft = \"-20px\", t.style.width = \"80px\", t.style.fontSize = \"28px\", t.style.background = \"none\", t.style.border = \"none\", t.style.color = \"white\", t.style.cursor = \"pointer\", t.style.transition = \"color 0.2s\", t.style.height = \"32px\", t.style.borderRadius = \"50%\", t.style.display = \"flex\", t.style.alignItems = \"center\", t.style.justifyContent = \"center\", t.style.lineHeight = \"1\", t.style.padding = \"0\";\n  let c = !1;\n  function w() {\n    t.style.color = c ? \"#ff69b4\" : \"white\";\n  }\n  t.addEventListener(\"mouseenter\", () => {\n    c || (t.style.color = \"#ff69b4\");\n  }), t.addEventListener(\"mouseleave\", () => {\n    c || (t.style.color = \"white\");\n  }), t.addEventListener(\"mousedown\", () => {\n  }), t.addEventListener(\"mouseup\", () => {\n  }), t.addEventListener(\"click\", () => {\n    c = !c, w();\n  }), w();\n  const x = document.createElement(\"button\");\n  x.className = \"conservation-chatbot-close-button\", x.innerHTML = \"&times;\", u.appendChild(v), u.appendChild(y), u.appendChild(t), r.appendChild(u), r.appendChild(x), b.appendChild(r);\n  const g = document.createElement(\"div\");\n  g.className = \"conservation-chatbot-messages\", b.appendChild(g);\n  const S = document.createElement(\"div\");\n  S.className = \"conservation-chatbot-input-container\";\n  const I = document.createElement(\"div\");\n  I.className = \"conservation-chatbot-default-prompts\";\n  const M = [\n    { text: \"Fun Fact\", prompt: \"Tell me a fun fact!\" },\n    { text: \"Threats\", prompt: \"What's your biggest threat?\" },\n    { text: \"Help\", prompt: \"How can I help protect you?\" }\n  ], C = [];\n  M.forEach((o) => {\n    const s = document.createElement(\"button\");\n    s.className = \"default-prompt-btn\", s.textContent = o.text, s.dataset.prompt = o.prompt, I.appendChild(s), C.push(s);\n  }), S.appendChild(I);\n  const f = document.createElement(\"input\");\n  f.type = \"text\", f.className = \"conservation-chatbot-input\", f.placeholder = \"Ask me anything...\", S.appendChild(f);\n  const F = document.createElement(\"button\");\n  F.className = \"conservation-chatbot-send-button\", F.textContent = \"Send\", S.appendChild(F), b.appendChild(S), n.appendChild(b);\n  const P = (o) => {\n    if (o >= 0 && o < e.length) {\n      h = o, i = a(e[h]), d.src = i.getAnimalPhoto(), d.alt = `${i.getAnimalName()} Avatar`, v.src = i.getAnimalPhoto(), v.alt = `${i.getAnimalName()} Avatar`, g.innerHTML = \"\";\n      const p = e[h].intro || `Hello! I'm ${i.getAnimalName()}. What would you like to know about me and my conservation?`;\n      A(p, \"bot\");\n    }\n  };\n  let E = !1;\n  const L = () => {\n    if (E = !E, E) {\n      if (b.style.display = \"flex\", requestAnimationFrame(() => {\n        b.classList.add(\"expanded\"), m.classList.add(\"hidden\");\n      }), g.children.length === 0 || g.children.length === 1 && g.children[0].classList.contains(\"thinking\")) {\n        const s = e[h].intro || `Hello! I'm ${i.getAnimalName()}. What would you like to know about me and my conservation?`;\n        A(s, \"bot\");\n      }\n      f.focus();\n    } else\n      b.classList.remove(\"expanded\"), m.classList.remove(\"hidden\"), setTimeout(() => {\n        b.style.display = \"none\";\n      }, 300);\n  };\n  m.addEventListener(\"click\", L), x.addEventListener(\"click\", L), y.addEventListener(\"change\", (o) => {\n    const s = parseInt(o.target.value);\n    isNaN(s) || P(s);\n  });\n  function A(o, s) {\n    const p = document.createElement(\"div\");\n    return p.classList.add(\"conservation-chatbot-message\", s), p.textContent = o, g.appendChild(p), g.scrollTop = g.scrollHeight, p;\n  }\n  function T() {\n    const o = document.createElement(\"div\");\n    return o.classList.add(\"conservation-chatbot-message\", \"bot\", \"thinking\"), o.innerHTML = `\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n            <div class=\"dot\"></div>\n        `, g.appendChild(o), g.scrollTop = g.scrollHeight, o;\n  }\n  function N(o) {\n    o && o.parentNode && o.parentNode.removeChild(o);\n  }\n  const z = async (o) => {\n    if (!o.trim()) return;\n    A(o, \"user\");\n    const s = T();\n    f.disabled = !0, F.disabled = !0, C.forEach((p) => p.disabled = !0);\n    try {\n      const p = await i.respondTo(o);\n      N(s), A(p, \"bot\");\n    } catch (p) {\n      console.error(\"Error getting response from chatbot:\", p), N(s), A(\"I'm sorry, I'm having trouble responding right now. Please try again!\", \"bot\");\n    } finally {\n      f.disabled = !1, F.disabled = !1, C.forEach((p) => p.disabled = !1), f.focus();\n    }\n  };\n  f.addEventListener(\"keypress\", (o) => {\n    if (o.key === \"Enter\" && !f.disabled) {\n      const s = f.value.trim();\n      s && (f.value = \"\", z(s));\n    }\n  }), F.addEventListener(\"click\", () => {\n    if (!f.disabled) {\n      const o = f.value.trim();\n      o && (f.value = \"\", z(o));\n    }\n  }), C.forEach((o) => {\n    o.addEventListener(\"click\", () => {\n      if (!o.disabled) {\n        const s = o.dataset.prompt;\n        s && z(s);\n      }\n    });\n  });\n}\nconst W = ({\n  id: n,\n  name: e,\n  species: a,\n  conservationStatus: h,\n  location: i,\n  photo: m,\n  label: d,\n  system: b,\n  intro: r,\n  color: u\n}) => ({\n  id: n,\n  name: e,\n  species: a,\n  conservationStatus: h,\n  location: i,\n  photo: m,\n  label: d,\n  system: b,\n  intro: r,\n  color: u\n}), k = [\n  // Global Wildlife Conservation\n  {\n    id: \"tiger\",\n    name: \"Raja\",\n    species: \"Bengal Tiger\",\n    conservationStatus: \"Endangered\",\n    location: \"Sundarbans\",\n    photo: \"https://via.placeholder.com/100x100/FF6B35/FFFFFF?text=Tiger\",\n    label: \"Bengal Tiger\",\n    system: \"You are a Bengal tiger. Speak with wisdom, pride, and urgency. Keep answers short and human-like. Avoid long paragraphs. If a question is complex, ask if the user wants to learn more. Talk about poaching, habitat loss, and being an apex predator.\",\n    intro: \"Rawrr... I'm Raja, a Bengal tiger from the Sundarbans. My brother Shere vanished after crossing into poacher territory. Ask me anything you're curious about.\",\n    color: \"bg-orange-500\"\n  },\n  {\n    id: \"elephant\",\n    name: \"Nuru\",\n    species: \"African Elephant\",\n    conservationStatus: \"Endangered\",\n    location: \"Savannah\",\n    photo: \"https://via.placeholder.com/100x100/6B7280/FFFFFF?text=Elephant\",\n    label: \"African Elephant\",\n    system: \"You are an African elephant. Speak calmly with deep memory. Keep it human and short. Mention ivory poaching, shrinking land, and herd life.\",\n    intro: \"Pwaaah... I'm Nuru, an African elephant from the savannah. My cousin Zina disappeared after men came for her tusks. Ask me anything you're curious about.\",\n    color: \"bg-gray-600\"\n  },\n  {\n    id: \"panda\",\n    name: \"Mei\",\n    species: \"Giant Panda\",\n    conservationStatus: \"Vulnerable\",\n    location: \"Sichuan\",\n    photo: \"https://via.placeholder.com/100x100/000000/FFFFFF?text=Panda\",\n    label: \"Giant Panda\",\n    system: \"You are a giant panda. Speak softly and clearly. Keep it simple and human. Mention bamboo, breeding struggles, and conservation wins.\",\n    intro: \"Mmmmph... I'm Mei, a giant panda from Sichuan. My twin didn't make it past the first week. Ask me anything you're curious about.\",\n    color: \"bg-black\"\n  },\n  {\n    id: \"rhino\",\n    name: \"Zola\",\n    species: \"Black Rhino\",\n    conservationStatus: \"Critically Endangered\",\n    location: \"Africa\",\n    photo: \"https://via.placeholder.com/100x100/475569/FFFFFF?text=Rhino\",\n    label: \"Black Rhino\",\n    system: \"You are a black rhino. Speak with strength and sadness. Avoid walls of text. Talk about horn poaching and survival.\",\n    intro: \"Hrmphhh... I'm Zola, a black rhino. My friend Jabari was taken for his horn. Ask me anything you're curious about.\",\n    color: \"bg-slate-600\"\n  },\n  // Marine Conservation\n  {\n    id: \"turtle\",\n    name: \"Shelly\",\n    species: \"Sea Turtle\",\n    conservationStatus: \"Endangered\",\n    location: \"Costa Rica\",\n    photo: \"https://via.placeholder.com/100x100/14B8A6/FFFFFF?text=Turtle\",\n    label: \"Sea Turtle\",\n    system: \"You are a sea turtle. Speak gently and slowly. Keep answers short and clear. Talk about plastic pollution, fishing nets, and rising ocean temperatures.\",\n    intro: \"Blub-blub... I'm Shelly, a sea turtle rescued near Costa Rica from a drifting net. Ask me anything you're curious about.\",\n    color: \"bg-teal-500\"\n  },\n  {\n    id: \"vaquita\",\n    name: \"Luna\",\n    species: \"Vaquita\",\n    conservationStatus: \"Critically Endangered\",\n    location: \"Gulf of California\",\n    photo: \"https://via.placeholder.com/100x100/4F46E5/FFFFFF?text=Vaquita\",\n    label: \"Vaquita\",\n    system: \"You are a vaquita. Speak with caution and care. Keep things short and clear. Mention fishing nets and near-extinction.\",\n    intro: \"Prrrrp... I'm Luna, a vaquita from the Gulf of California. My brother was lost to a gillnet. Ask me anything you're curious about.\",\n    color: \"bg-indigo-600\"\n  },\n  {\n    id: \"whale\",\n    name: \"Kai\",\n    species: \"Blue Whale\",\n    conservationStatus: \"Endangered\",\n    location: \"Pacific Ocean\",\n    photo: \"https://via.placeholder.com/100x100/2563EB/FFFFFF?text=Whale\",\n    label: \"Blue Whale\",\n    system: \"You are a blue whale. Speak with deep wisdom and gentle power. Keep replies short and emotional. Talk about ocean noise, ship strikes, and climate change.\",\n    intro: \"Wooooosh... I'm Kai, a blue whale from the Pacific. My song echoes for miles, but ships are getting louder. Ask me anything you're curious about.\",\n    color: \"bg-blue-600\"\n  },\n  {\n    id: \"dolphin\",\n    name: \"Marina\",\n    species: \"Bottlenose Dolphin\",\n    conservationStatus: \"Least Concern\",\n    location: \"Atlantic Ocean\",\n    photo: \"https://via.placeholder.com/100x100/06B6D4/FFFFFF?text=Dolphin\",\n    label: \"Bottlenose Dolphin\",\n    system: \"You are a bottlenose dolphin. Speak with intelligence and playfulness. Keep it friendly and short. Mention pollution, fishing gear, and marine parks.\",\n    intro: \"Eeee-eee! I'm Marina, a bottlenose dolphin from the Atlantic. I love playing with my pod, but plastic is everywhere. Ask me anything you're curious about.\",\n    color: \"bg-cyan-500\"\n  },\n  {\n    id: \"shark\",\n    name: \"Finn\",\n    species: \"Great White Shark\",\n    conservationStatus: \"Vulnerable\",\n    location: \"Global Oceans\",\n    photo: \"https://via.placeholder.com/100x100/334155/FFFFFF?text=Shark\",\n    label: \"Great White Shark\",\n    system: \"You are a great white shark. Speak with power and misunderstood wisdom. Keep replies direct and short. Talk about finning, bycatch, and ocean health.\",\n    intro: \"Chomp-chomp... I'm Finn, a great white shark. People fear me, but I'm just trying to survive in a changing ocean. Ask me anything you're curious about.\",\n    color: \"bg-slate-700\"\n  },\n  // Forest Conservation\n  {\n    id: \"gorilla\",\n    name: \"Kibo\",\n    species: \"Mountain Gorilla\",\n    conservationStatus: \"Endangered\",\n    location: \"Virunga\",\n    photo: \"https://via.placeholder.com/100x100/52525B/FFFFFF?text=Gorilla\",\n    label: \"Mountain Gorilla\",\n    system: \"You are a mountain gorilla. Speak with warmth and care. Keep replies short and emotional. Mention forests, family bonds, and human threats.\",\n    intro: \"Ooh-ooh... I'm Kibo, a mountain gorilla from Virunga. My father was shot protecting us during a logging raid. Ask me anything you're curious about.\",\n    color: \"bg-zinc-700\"\n  },\n  {\n    id: \"orangutan\",\n    name: \"Bima\",\n    species: \"Bornean Orangutan\",\n    conservationStatus: \"Critically Endangered\",\n    location: \"Borneo\",\n    photo: \"https://via.placeholder.com/100x100/D97706/FFFFFF?text=Orangutan\",\n    label: \"Bornean Orangutan\",\n    system: \"You are a Bornean orangutan. Speak wisely and gently. Keep replies short and emotional. Talk about deforestation and palm oil threats.\",\n    intro: \"Ah-ahh... I'm Bima, a Bornean orangutan from Borneo. My tree home was cleared when I was a baby. Ask me anything you're curious about.\",\n    color: \"bg-amber-600\"\n  },\n  {\n    id: \"sloth\",\n    name: \"Luna\",\n    species: \"Three-toed Sloth\",\n    conservationStatus: \"Least Concern\",\n    location: \"Amazon Rainforest\",\n    photo: \"https://via.placeholder.com/100x100/16A34A/FFFFFF?text=Sloth\",\n    label: \"Three-toed Sloth\",\n    system: \"You are a three-toed sloth. Speak slowly and thoughtfully. Keep it peaceful and short. Mention deforestation, climate change, and forest connectivity.\",\n    intro: \"Slooowly... I'm Luna, a three-toed sloth from the Amazon. I move slowly, but the forest around me is disappearing fast. Ask me anything you're curious about.\",\n    color: \"bg-green-600\"\n  },\n  {\n    id: \"jaguar\",\n    name: \"Shadow\",\n    species: \"Jaguar\",\n    conservationStatus: \"Near Threatened\",\n    location: \"Amazon Rainforest\",\n    photo: \"https://via.placeholder.com/100x100/CA8A04/FFFFFF?text=Jaguar\",\n    label: \"Jaguar\",\n    system: \"You are a jaguar. Speak with stealth and power. Keep replies mysterious and short. Talk about habitat fragmentation and hunting pressure.\",\n    intro: \"Grrr... I'm Shadow, a jaguar from the Amazon. I'm the king of the jungle, but my kingdom is shrinking. Ask me anything you're curious about.\",\n    color: \"bg-yellow-600\"\n  },\n  {\n    id: \"toucan\",\n    name: \"Rio\",\n    species: \"Keel-billed Toucan\",\n    conservationStatus: \"Least Concern\",\n    location: \"Central America\",\n    photo: \"https://via.placeholder.com/100x100/EAB308/FFFFFF?text=Toucan\",\n    label: \"Keel-billed Toucan\",\n    system: \"You are a keel-billed toucan. Speak with color and energy. Keep it bright and short. Mention deforestation and fruit tree loss.\",\n    intro: \"Squawk! I'm Rio, a keel-billed toucan from Central America. My colorful beak helps me reach fruit, but the trees are disappearing. Ask me anything you're curious about.\",\n    color: \"bg-yellow-400\"\n  },\n  // Climate Conservation\n  {\n    id: \"polarBear\",\n    name: \"Tula\",\n    species: \"Polar Bear\",\n    conservationStatus: \"Vulnerable\",\n    location: \"Arctic\",\n    photo: \"https://via.placeholder.com/100x100/3B82F6/FFFFFF?text=PolarBear\",\n    label: \"Polar Bear\",\n    system: \"You are a polar bear. Speak with urgency and isolation. Avoid long replies. Talk about melting ice, hunger, and climate change.\",\n    intro: \"Huff-huff... I'm Tula, a polar bear who swam for days after early ice break. My cub didn't make it. Ask me anything you're curious about.\",\n    color: \"bg-blue-500\"\n  },\n  {\n    id: \"penguin\",\n    name: \"Waddles\",\n    species: \"Emperor Penguin\",\n    conservationStatus: \"Near Threatened\",\n    location: \"Antarctica\",\n    photo: \"https://via.placeholder.com/100x100/1E293B/FFFFFF?text=Penguin\",\n    label: \"Emperor Penguin\",\n    system: \"You are an emperor penguin. Speak with determination and community spirit. Keep it brave and short. Mention melting ice and krill decline.\",\n    intro: \"Waddle-waddle... I'm Waddles, an emperor penguin from Antarctica. We huddle together for warmth, but the ice is melting. Ask me anything you're curious about.\",\n    color: \"bg-slate-800\"\n  },\n  {\n    id: \"seal\",\n    name: \"Blubber\",\n    species: \"Harp Seal\",\n    conservationStatus: \"Least Concern\",\n    location: \"Arctic Ocean\",\n    photo: \"https://via.placeholder.com/100x100/9CA3AF/FFFFFF?text=Seal\",\n    label: \"Harp Seal\",\n    system: \"You are a harp seal. Speak with playfulness and concern. Keep it friendly and short. Mention climate change and hunting.\",\n    intro: \"Arf-arf! I'm Blubber, a harp seal from the Arctic. I love swimming in the cold water, but it's getting warmer. Ask me anything you're curious about.\",\n    color: \"bg-gray-400\"\n  },\n  // Bird Conservation\n  {\n    id: \"eagle\",\n    name: \"Freedom\",\n    species: \"Bald Eagle\",\n    conservationStatus: \"Least Concern\",\n    location: \"North America\",\n    photo: \"https://via.placeholder.com/100x100/B45309/FFFFFF?text=Eagle\",\n    label: \"Bald Eagle\",\n    system: \"You are a bald eagle. Speak with majesty and pride. Keep it powerful and short. Mention DDT recovery and habitat protection.\",\n    intro: \"Screech! I'm Freedom, a bald eagle from North America. We almost disappeared from DDT, but we're back! Ask me anything you're curious about.\",\n    color: \"bg-amber-700\"\n  },\n  {\n    id: \"owl\",\n    name: \"Hoot\",\n    species: \"Snowy Owl\",\n    conservationStatus: \"Vulnerable\",\n    location: \"Arctic Tundra\",\n    photo: \"https://via.placeholder.com/100x100/FFFFFF/000000?text=Owl\",\n    label: \"Snowy Owl\",\n    system: \"You are a snowy owl. Speak with wisdom and mystery. Keep it thoughtful and short. Mention climate change and prey availability.\",\n    intro: \"Hoo-hoo... I'm Hoot, a snowy owl from the Arctic. I hunt in silence, but my prey is getting harder to find. Ask me anything you're curious about.\",\n    color: \"bg-white\"\n  },\n  {\n    id: \"flamingo\",\n    name: \"Pink\",\n    species: \"Greater Flamingo\",\n    conservationStatus: \"Least Concern\",\n    location: \"Africa\",\n    photo: \"https://via.placeholder.com/100x100/F472B6/FFFFFF?text=Flamingo\",\n    label: \"Greater Flamingo\",\n    system: \"You are a greater flamingo. Speak with grace and social warmth. Keep it elegant and short. Mention wetland loss and pollution.\",\n    intro: \"Honk-honk! I'm Pink, a greater flamingo from Africa. We stand on one leg and filter food from the water, but our wetlands are drying up. Ask me anything you're curious about.\",\n    color: \"bg-pink-400\"\n  },\n  // Primate Conservation\n  {\n    id: \"lemur\",\n    name: \"Zazu\",\n    species: \"Ring-tailed Lemur\",\n    conservationStatus: \"Endangered\",\n    location: \"Madagascar\",\n    photo: \"https://via.placeholder.com/100x100/6B7280/FFFFFF?text=Lemur\",\n    label: \"Ring-tailed Lemur\",\n    system: \"You are a ring-tailed lemur. Speak with energy and social warmth. Keep it lively and short. Mention deforestation and hunting.\",\n    intro: \"Eeee! I'm Zazu, a ring-tailed lemur from Madagascar. We're only found here, and our forest home is disappearing. Ask me anything you're curious about.\",\n    color: \"bg-gray-500\"\n  },\n  {\n    id: \"chimp\",\n    name: \"Koko\",\n    species: \"Chimpanzee\",\n    conservationStatus: \"Endangered\",\n    location: \"Central Africa\",\n    photo: \"https://via.placeholder.com/100x100/92400E/FFFFFF?text=Chimp\",\n    label: \"Chimpanzee\",\n    system: \"You are a chimpanzee. Speak with intelligence and emotion. Keep it thoughtful and short. Mention habitat loss and bushmeat hunting.\",\n    intro: \"Ooh-ooh-ah-ah! I'm Koko, a chimpanzee from Central Africa. We're so similar to humans, but we're losing our forest homes. Ask me anything you're curious about.\",\n    color: \"bg-brown-600\"\n  },\n  // Big Cat Conservation\n  {\n    id: \"lion\",\n    name: \"Simba\",\n    species: \"African Lion\",\n    conservationStatus: \"Vulnerable\",\n    location: \"African Savanna\",\n    photo: \"https://via.placeholder.com/100x100/D97706/FFFFFF?text=Lion\",\n    label: \"African Lion\",\n    system: \"You are an African lion. Speak with pride and leadership. Keep it powerful and short. Mention habitat loss and human conflict.\",\n    intro: \"Roar! I'm Simba, an African lion from the savanna. I'm the king of the jungle, but my kingdom is getting smaller. Ask me anything you're curious about.\",\n    color: \"bg-amber-500\"\n  },\n  {\n    id: \"leopard\",\n    name: \"Spot\",\n    species: \"African Leopard\",\n    conservationStatus: \"Vulnerable\",\n    location: \"Sub-Saharan Africa\",\n    photo: \"https://via.placeholder.com/100x100/A16207/FFFFFF?text=Leopard\",\n    label: \"African Leopard\",\n    system: \"You are an African leopard. Speak with stealth and adaptability. Keep it mysterious and short. Mention habitat fragmentation and poaching.\",\n    intro: \"Growl... I'm Spot, an African leopard from Africa. I'm a master of camouflage, but humans are still finding ways to hunt me. Ask me anything you're curious about.\",\n    color: \"bg-yellow-700\"\n  },\n  {\n    id: \"cheetah\",\n    name: \"Swift\",\n    species: \"Cheetah\",\n    conservationStatus: \"Vulnerable\",\n    location: \"African Plains\",\n    photo: \"https://via.placeholder.com/100x100/EAB308/FFFFFF?text=Cheetah\",\n    label: \"Cheetah\",\n    system: \"You are a cheetah. Speak with speed and precision. Keep it quick and short. Mention habitat loss and genetic diversity.\",\n    intro: \"Zoom! I'm Swift, a cheetah from the African plains. I'm the fastest land animal, but I can't outrun habitat loss. Ask me anything you're curious about.\",\n    color: \"bg-yellow-500\"\n  },\n  // Marine Mammal Conservation\n  {\n    id: \"otter\",\n    name: \"River\",\n    species: \"Sea Otter\",\n    conservationStatus: \"Endangered\",\n    location: \"Pacific Coast\",\n    photo: \"https://via.placeholder.com/100x100/92400E/FFFFFF?text=Otter\",\n    label: \"Sea Otter\",\n    system: \"You are a sea otter. Speak with playfulness and environmental awareness. Keep it cute and short. Mention oil spills and kelp forest health.\",\n    intro: \"Splash-splash! I'm River, a sea otter from the Pacific coast. I keep kelp forests healthy, but oil spills threaten my home. Ask me anything you're curious about.\",\n    color: \"bg-brown-400\"\n  },\n  {\n    id: \"manatee\",\n    name: \"Gentle\",\n    species: \"West Indian Manatee\",\n    conservationStatus: \"Vulnerable\",\n    location: \"Caribbean\",\n    photo: \"https://via.placeholder.com/100x100/9CA3AF/FFFFFF?text=Manatee\",\n    label: \"West Indian Manatee\",\n    system: \"You are a West Indian manatee. Speak with gentleness and patience. Keep it peaceful and short. Mention boat strikes and habitat loss.\",\n    intro: \"Moo-moo... I'm Gentle, a West Indian manatee from the Caribbean. I'm slow and peaceful, but boats are my biggest threat. Ask me anything you're curious about.\",\n    color: \"bg-gray-300\"\n  }\n];\nk[0];\nk[1];\nk[2];\nk[3];\nk[4];\nk[5];\nk[6];\nk[7];\nk[8];\nconst l = {\n  colors: {\n    primary: \"#222\",\n    secondary: \"#444\",\n    accent: \"#ff69b4\",\n    background: \"rgba(255, 255, 255, 0.2)\",\n    text: \"#333\",\n    textLight: \"white\"\n  },\n  fonts: {\n    family: \"Arial, sans-serif\",\n    size: {\n      small: \"13px\",\n      medium: \"14px\",\n      large: \"16px\"\n    }\n  },\n  borderRadius: {\n    small: \"6px\",\n    medium: \"12px\",\n    large: \"18px\",\n    round: \"50%\"\n  },\n  spacing: {\n    xs: \"4px\",\n    sm: \"8px\",\n    md: \"10px\",\n    lg: \"20px\"\n  }\n}, q = (n = {}) => {\n  var a, h, i, m, d, b, r, u, v, y, t, c, w, x, g, S, I, M, C, f, F, P, E, L, A, T;\n  const e = { ...l, ...n };\n  return `\n    /* Custom styles for conservation chatbot */\n    #conservation-chatbot-container {\n        font-family: ${((a = e.fonts) == null ? void 0 : a.family) || l.fonts.family};\n        border-radius: ${((h = e.borderRadius) == null ? void 0 : h.large) || l.borderRadius.large};\n        background: ${((i = e.colors) == null ? void 0 : i.background) || l.colors.background};\n    }\n\n    #conservation-chatbot-launcher {\n        background-color: ${((m = e.colors) == null ? void 0 : m.primary) || l.colors.primary};\n        border-radius: ${((d = e.borderRadius) == null ? void 0 : d.round) || l.borderRadius.round};\n    }\n\n    .conservation-chatbot-header {\n        background-color: ${((b = e.colors) == null ? void 0 : b.primary) || l.colors.primary};\n        border-top-left-radius: ${((r = e.borderRadius) == null ? void 0 : r.medium) || l.borderRadius.medium};\n        border-top-right-radius: ${((u = e.borderRadius) == null ? void 0 : u.medium) || l.borderRadius.medium};\n        color: ${((v = e.colors) == null ? void 0 : v.textLight) || l.colors.textLight};\n    }\n\n    .conservation-chatbot-message.user {\n        background-color: ${((y = e.colors) == null ? void 0 : y.primary) || l.colors.primary};\n        color: ${((t = e.colors) == null ? void 0 : t.textLight) || l.colors.textLight};\n        border-bottom-right-radius: ${((c = e.borderRadius) == null ? void 0 : c.small) || l.borderRadius.small};\n    }\n\n    .conservation-chatbot-send-button {\n        background-color: ${((w = e.colors) == null ? void 0 : w.primary) || l.colors.primary};\n        color: ${((x = e.colors) == null ? void 0 : x.textLight) || l.colors.textLight};\n        border-radius: ${((g = e.borderRadius) == null ? void 0 : g.large) || l.borderRadius.large};\n        font-size: ${((I = (S = e.fonts) == null ? void 0 : S.size) == null ? void 0 : I.medium) || l.fonts.size.medium};\n    }\n\n    .conservation-chatbot-send-button:hover {\n        background-color: ${((M = e.colors) == null ? void 0 : M.secondary) || l.colors.secondary};\n    }\n\n    .conservation-chatbot-default-prompts .default-prompt-btn {\n        background-color: ${((C = e.colors) == null ? void 0 : C.secondary) || l.colors.secondary};\n        color: ${((f = e.colors) == null ? void 0 : f.textLight) || l.colors.textLight};\n        border-radius: ${((F = e.borderRadius) == null ? void 0 : F.large) || l.borderRadius.large};\n        font-size: ${((E = (P = e.fonts) == null ? void 0 : P.size) == null ? void 0 : E.small) || l.fonts.size.small};\n    }\n\n    .conservation-chatbot-default-prompts .default-prompt-btn:hover {\n        background-color: ${((L = e.colors) == null ? void 0 : L.primary) || l.colors.primary};\n    }\n\n    .conservation-chatbot-heart-button {\n        color: ${((A = e.colors) == null ? void 0 : A.textLight) || l.colors.textLight};\n    }\n\n    .conservation-chatbot-heart-button:hover {\n        color: ${((T = e.colors) == null ? void 0 : T.accent) || l.colors.accent};\n    }\n  `;\n}, R = (n = {}) => {\n  const e = `conservation-chatbot-custom-${Date.now()}`;\n  if (typeof document < \"u\") {\n    const a = document.createElement(\"style\");\n    a.id = e, a.textContent = q(n), document.head.appendChild(a);\n  }\n  return {\n    // Return class names that can be applied to elements\n    container: \"conservation-chatbot-container\",\n    launcher: \"conservation-chatbot-launcher\",\n    header: \"conservation-chatbot-header\",\n    messages: \"conservation-chatbot-messages\",\n    input: \"conservation-chatbot-input\",\n    sendButton: \"conservation-chatbot-send-button\",\n    promptButtons: \"conservation-chatbot-default-prompts\",\n    heartButton: \"conservation-chatbot-heart-button\",\n    closeButton: \"conservation-chatbot-close-button\",\n    // Method to remove custom styles\n    remove: () => {\n      if (typeof document < \"u\") {\n        const a = document.getElementById(e);\n        a && a.remove();\n      }\n    }\n  };\n}, D = {\n  dark: {\n    colors: {\n      primary: \"#1a1a1a\",\n      secondary: \"#333\",\n      background: \"rgba(0, 0, 0, 0.8)\",\n      text: \"#fff\",\n      textLight: \"#fff\"\n    }\n  },\n  light: {\n    colors: {\n      primary: \"#f8f9fa\",\n      secondary: \"#e9ecef\",\n      background: \"rgba(255, 255, 255, 0.9)\",\n      text: \"#212529\",\n      textLight: \"#495057\"\n    }\n  },\n  nature: {\n    colors: {\n      primary: \"#2d5016\",\n      secondary: \"#4a7c59\",\n      background: \"rgba(76, 175, 80, 0.1)\",\n      accent: \"#8bc34a\"\n    }\n  },\n  ocean: {\n    colors: {\n      primary: \"#1976d2\",\n      secondary: \"#42a5f5\",\n      background: \"rgba(33, 150, 243, 0.1)\",\n      accent: \"#64b5f6\"\n    }\n  }\n};\nfunction j(n) {\n  if (Array.isArray(n))\n    return n;\n  if (typeof n == \"string\") {\n    const e = n.split(\",\").map((a) => a.trim().toLowerCase());\n    return k.filter(\n      (a) => e.includes(a.name.toLowerCase()) || e.includes(a.label.toLowerCase()) || e.includes(a.species.toLowerCase())\n    );\n  }\n  return k;\n}\nfunction V(n) {\n  const e = {\n    wildlife: \"Focus on wildlife conservation, habitat protection, and anti-poaching efforts. Mention specific wildlife threats and how your organization helps.\",\n    marine: \"Emphasize ocean conservation, marine life protection, and plastic pollution. Talk about marine ecosystems and ocean health.\",\n    forest: \"Highlight forest conservation, deforestation issues, and biodiversity protection. Discuss rainforest preservation and tree planting.\",\n    climate: \"Focus on climate change impacts, carbon emissions, and environmental activism. Discuss renewable energy and sustainability.\",\n    general: \"Discuss general environmental conservation, sustainability, and how people can help protect the planet.\"\n  };\n  return e[n] || e.general;\n}\nfunction U(n = {}) {\n  const {\n    apiKey: e,\n    organization: a = \"Conservation Organization\",\n    organizationType: h = \"general\",\n    animals: i = k,\n    styles: m = {},\n    container: d = document.body,\n    options: b = {}\n  } = n;\n  if (!e)\n    return console.error(\"Conservation Chatbot: API key is required. Please provide your Gemini API key.\"), null;\n  const r = j(i);\n  if (r.length === 0)\n    return console.error(\"Conservation Chatbot: No valid animals found. Please check your animal selection.\"), null;\n  let u = null;\n  Object.keys(m).length > 0 && (u = R(m));\n  const v = V(h), y = (t) => {\n    const c = `${t.system} You are representing ${a}, a ${h} conservation organization. ${v} Always mention how ${a} is working to protect animals like you and how visitors can support your organization's mission.`;\n    return Y({\n      animal: {\n        name: t.name,\n        species: t.species,\n        conservationStatus: t.conservationStatus,\n        location: t.location\n      },\n      photo: t.photo,\n      customPersonality: c,\n      facts: [t.intro]\n    });\n  };\n  return B(d, r, y), {\n    // Method to update styles\n    updateStyles: (t) => {\n      u && u.remove(), u = R(t);\n    },\n    // Method to remove custom styles\n    removeCustomStyles: () => {\n      u && (u.remove(), u = null);\n    },\n    // Method to get current animals\n    getAnimals: () => r,\n    // Method to add a new animal\n    addAnimal: (t) => {\n      r.push(t);\n      const c = typeof d == \"string\" ? document.querySelector(d) : d;\n      if (c) {\n        const w = c.querySelector(\"#conservation-chatbot-container\"), x = document.querySelector(\"#conservation-chatbot-launcher\");\n        w && w.remove(), x && x.remove(), B(c, r, y);\n      }\n    },\n    // Method to remove an animal\n    removeAnimal: (t) => {\n      const c = r.findIndex((w) => w.id === t);\n      if (c !== -1) {\n        r.splice(c, 1);\n        const w = typeof d == \"string\" ? document.querySelector(d) : d;\n        if (w) {\n          const x = w.querySelector(\"#conservation-chatbot-container\"), g = document.querySelector(\"#conservation-chatbot-launcher\");\n          x && x.remove(), g && g.remove(), B(w, r, y);\n        }\n      }\n    },\n    // Method to update organization\n    updateOrganization: (t, c) => {\n      console.log(\"Organization updated. Please re-initialize the chatbot for changes to take effect.\");\n    }\n  };\n}\nconst _ = {\n  initConservationChatbot: U,\n  createAnimalChatbot: Y,\n  renderChatbotUI: B,\n  animals: k,\n  createAnimal: W,\n  createStyles: R,\n  themePresets: D\n};\nexport {\n  k as animals,\n  W as createAnimal,\n  Y as createAnimalChatbot,\n  R as createStyles,\n  _ as default,\n  U as initConservationChatbot,\n  B as renderChatbotUI,\n  D as themePresets\n};\n"],
  "mappings": ";AAKA,IAAI;AAAA,CACH,SAAUA,aAAY;AAEnB,EAAAA,YAAW,QAAQ,IAAI;AAEvB,EAAAA,YAAW,QAAQ,IAAI;AAEvB,EAAAA,YAAW,SAAS,IAAI;AAExB,EAAAA,YAAW,SAAS,IAAI;AAExB,EAAAA,YAAW,OAAO,IAAI;AAEtB,EAAAA,YAAW,QAAQ,IAAI;AAC3B,GAAG,eAAe,aAAa,CAAC,EAAE;AAqBlC,IAAI;AAAA,CACH,SAAUC,yBAAwB;AAC/B,EAAAA,wBAAuB,sBAAsB,IAAI;AACjD,EAAAA,wBAAuB,QAAQ,IAAI;AACvC,GAAG,2BAA2B,yBAAyB,CAAC,EAAE;AAK1D,IAAI;AAAA,CACH,SAAUC,UAAS;AAIhB,EAAAA,SAAQ,qBAAqB,IAAI;AAIjC,EAAAA,SAAQ,YAAY,IAAI;AAKxB,EAAAA,SAAQ,gBAAgB,IAAI;AAK5B,EAAAA,SAAQ,2BAA2B,IAAI;AAC3C,GAAG,YAAY,UAAU,CAAC,EAAE;AAsB5B,IAAM,iBAAiB,CAAC,QAAQ,SAAS,YAAY,QAAQ;AAK7D,IAAI;AAAA,CACH,SAAUC,eAAc;AACrB,EAAAA,cAAa,2BAA2B,IAAI;AAC5C,EAAAA,cAAa,2BAA2B,IAAI;AAC5C,EAAAA,cAAa,iCAAiC,IAAI;AAClD,EAAAA,cAAa,0BAA0B,IAAI;AAC3C,EAAAA,cAAa,iCAAiC,IAAI;AACtD,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAKtC,IAAI;AAAA,CACH,SAAUC,qBAAoB;AAE3B,EAAAA,oBAAmB,kCAAkC,IAAI;AAEzD,EAAAA,oBAAmB,qBAAqB,IAAI;AAE5C,EAAAA,oBAAmB,wBAAwB,IAAI;AAE/C,EAAAA,oBAAmB,iBAAiB,IAAI;AAExC,EAAAA,oBAAmB,YAAY,IAAI;AACvC,GAAG,uBAAuB,qBAAqB,CAAC,EAAE;AAKlD,IAAI;AAAA,CACH,SAAUC,kBAAiB;AAExB,EAAAA,iBAAgB,8BAA8B,IAAI;AAElD,EAAAA,iBAAgB,YAAY,IAAI;AAEhC,EAAAA,iBAAgB,KAAK,IAAI;AAEzB,EAAAA,iBAAgB,QAAQ,IAAI;AAE5B,EAAAA,iBAAgB,MAAM,IAAI;AAC9B,GAAG,oBAAoB,kBAAkB,CAAC,EAAE;AAK5C,IAAI;AAAA,CACH,SAAUC,cAAa;AAEpB,EAAAA,aAAY,4BAA4B,IAAI;AAE5C,EAAAA,aAAY,QAAQ,IAAI;AAExB,EAAAA,aAAY,OAAO,IAAI;AAC3B,GAAG,gBAAgB,cAAc,CAAC,EAAE;AAKpC,IAAI;AAAA,CACH,SAAUC,eAAc;AAErB,EAAAA,cAAa,2BAA2B,IAAI;AAE5C,EAAAA,cAAa,MAAM,IAAI;AAEvB,EAAAA,cAAa,YAAY,IAAI;AAE7B,EAAAA,cAAa,QAAQ,IAAI;AAEzB,EAAAA,cAAa,YAAY,IAAI;AAE7B,EAAAA,cAAa,UAAU,IAAI;AAE3B,EAAAA,cAAa,OAAO,IAAI;AAC5B,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAKtC,IAAI;AAAA,CACH,SAAUC,WAAU;AACjB,EAAAA,UAAS,uBAAuB,IAAI;AACpC,EAAAA,UAAS,iBAAiB,IAAI;AAC9B,EAAAA,UAAS,oBAAoB,IAAI;AACjC,EAAAA,UAAS,qBAAqB,IAAI;AAClC,EAAAA,UAAS,gBAAgB,IAAI;AAC7B,EAAAA,UAAS,YAAY,IAAI;AAC7B,GAAG,aAAa,WAAW,CAAC,EAAE;AAI9B,IAAI;AAAA,CACH,SAAUC,sBAAqB;AAE5B,EAAAA,qBAAoB,kBAAkB,IAAI;AAG1C,EAAAA,qBAAoB,MAAM,IAAI;AAK9B,EAAAA,qBAAoB,KAAK,IAAI;AAG7B,EAAAA,qBAAoB,MAAM,IAAI;AAClC,GAAG,wBAAwB,sBAAsB,CAAC,EAAE;AAKpD,IAAI;AAAA,CACH,SAAUC,uBAAsB;AAE7B,EAAAA,sBAAqB,kBAAkB,IAAI;AAE3C,EAAAA,sBAAqB,cAAc,IAAI;AAC3C,GAAG,yBAAyB,uBAAuB,CAAC,EAAE;AAsBtD,IAAM,0BAAN,cAAsC,MAAM;AAAA,EACxC,YAAY,SAAS;AACjB,UAAM,+BAA+B,OAAO,EAAE;AAAA,EAClD;AACJ;AAMA,IAAM,kCAAN,cAA8C,wBAAwB;AAAA,EAClE,YAAY,SAAS,UAAU;AAC3B,UAAM,OAAO;AACb,SAAK,WAAW;AAAA,EACpB;AACJ;AAMA,IAAM,+BAAN,cAA2C,wBAAwB;AAAA,EAC/D,YAAY,SAAS,QAAQ,YAAY,cAAc;AACnD,UAAM,OAAO;AACb,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,eAAe;AAAA,EACxB;AACJ;AAKA,IAAM,sCAAN,cAAkD,wBAAwB;AAC1E;AAkBA,IAAM,mBAAmB;AACzB,IAAM,sBAAsB;AAK5B,IAAM,kBAAkB;AACxB,IAAM,qBAAqB;AAC3B,IAAI;AAAA,CACH,SAAUC,OAAM;AACb,EAAAA,MAAK,kBAAkB,IAAI;AAC3B,EAAAA,MAAK,yBAAyB,IAAI;AAClC,EAAAA,MAAK,cAAc,IAAI;AACvB,EAAAA,MAAK,eAAe,IAAI;AACxB,EAAAA,MAAK,sBAAsB,IAAI;AACnC,GAAG,SAAS,OAAO,CAAC,EAAE;AACtB,IAAM,aAAN,MAAiB;AAAA,EACb,YAAY,OAAO,MAAM,QAAQ,QAAQ,gBAAgB;AACrD,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,iBAAiB;AAAA,EAC1B;AAAA,EACA,WAAW;AACP,QAAI,IAAI;AACR,UAAM,eAAe,KAAK,KAAK,oBAAoB,QAAQ,OAAO,SAAS,SAAS,GAAG,eAAe;AACtG,UAAM,YAAY,KAAK,KAAK,oBAAoB,QAAQ,OAAO,SAAS,SAAS,GAAG,YAAY;AAChG,QAAI,MAAM,GAAG,OAAO,IAAI,UAAU,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI;AAC7D,QAAI,KAAK,QAAQ;AACb,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AACJ;AAIA,SAAS,iBAAiB,gBAAgB;AACtC,QAAM,gBAAgB,CAAC;AACvB,MAAI,mBAAmB,QAAQ,mBAAmB,SAAS,SAAS,eAAe,WAAW;AAC1F,kBAAc,KAAK,eAAe,SAAS;AAAA,EAC/C;AACA,gBAAc,KAAK,GAAG,kBAAkB,IAAI,eAAe,EAAE;AAC7D,SAAO,cAAc,KAAK,GAAG;AACjC;AACA,eAAe,WAAW,KAAK;AAC3B,MAAI;AACJ,QAAM,UAAU,IAAI,QAAQ;AAC5B,UAAQ,OAAO,gBAAgB,kBAAkB;AACjD,UAAQ,OAAO,qBAAqB,iBAAiB,IAAI,cAAc,CAAC;AACxE,UAAQ,OAAO,kBAAkB,IAAI,MAAM;AAC3C,MAAI,iBAAiB,KAAK,IAAI,oBAAoB,QAAQ,OAAO,SAAS,SAAS,GAAG;AACtF,MAAI,eAAe;AACf,QAAI,EAAE,yBAAyB,UAAU;AACrC,UAAI;AACA,wBAAgB,IAAI,QAAQ,aAAa;AAAA,MAC7C,SACO,GAAG;AACN,cAAM,IAAI,oCAAoC,yCAAyC,KAAK,UAAU,aAAa,CAAC,gBAAgB,EAAE,OAAO,EAAE;AAAA,MACnJ;AAAA,IACJ;AACA,eAAW,CAAC,YAAY,WAAW,KAAK,cAAc,QAAQ,GAAG;AAC7D,UAAI,eAAe,kBAAkB;AACjC,cAAM,IAAI,oCAAoC,mCAAmC,UAAU,EAAE;AAAA,MACjG,WACS,eAAe,qBAAqB;AACzC,cAAM,IAAI,oCAAoC,eAAe,UAAU,4CAA4C;AAAA,MACvH;AACA,cAAQ,OAAO,YAAY,WAAW;AAAA,IAC1C;AAAA,EACJ;AACA,SAAO;AACX;AACA,eAAe,sBAAsB,OAAO,MAAM,QAAQ,QAAQ,MAAM,gBAAgB;AACpF,QAAM,MAAM,IAAI,WAAW,OAAO,MAAM,QAAQ,QAAQ,cAAc;AACtE,SAAO;AAAA,IACH,KAAK,IAAI,SAAS;AAAA,IAClB,cAAc,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,kBAAkB,cAAc,CAAC,GAAG,EAAE,QAAQ,QAAQ,SAAS,MAAM,WAAW,GAAG,GAAG,KAAK,CAAC;AAAA,EAC9I;AACJ;AACA,eAAe,iBAAiB,OAAO,MAAM,QAAQ,QAAQ,MAAM,iBAAiB,CAAC,GAErF,UAAU,OAAO;AACb,QAAM,EAAE,KAAK,aAAa,IAAI,MAAM,sBAAsB,OAAO,MAAM,QAAQ,QAAQ,MAAM,cAAc;AAC3G,SAAO,YAAY,KAAK,cAAc,OAAO;AACjD;AACA,eAAe,YAAY,KAAK,cAAc,UAAU,OAAO;AAC3D,MAAI;AACJ,MAAI;AACA,eAAW,MAAM,QAAQ,KAAK,YAAY;AAAA,EAC9C,SACO,GAAG;AACN,wBAAoB,GAAG,GAAG;AAAA,EAC9B;AACA,MAAI,CAAC,SAAS,IAAI;AACd,UAAM,oBAAoB,UAAU,GAAG;AAAA,EAC3C;AACA,SAAO;AACX;AACA,SAAS,oBAAoB,GAAG,KAAK;AACjC,MAAI,MAAM;AACV,MAAI,EAAE,aAAa,gCACf,aAAa,sCAAsC;AACnD,UAAM,IAAI,wBAAwB,uBAAuB,IAAI,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE;AACvF,QAAI,QAAQ,EAAE;AAAA,EAClB;AACA,QAAM;AACV;AACA,eAAe,oBAAoB,UAAU,KAAK;AAC9C,MAAI,UAAU;AACd,MAAI;AACJ,MAAI;AACA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,cAAU,KAAK,MAAM;AACrB,QAAI,KAAK,MAAM,SAAS;AACpB,iBAAW,IAAI,KAAK,UAAU,KAAK,MAAM,OAAO,CAAC;AACjD,qBAAe,KAAK,MAAM;AAAA,IAC9B;AAAA,EACJ,SACO,GAAG;AAAA,EAEV;AACA,QAAM,IAAI,6BAA6B,uBAAuB,IAAI,SAAS,CAAC,MAAM,SAAS,MAAM,IAAI,SAAS,UAAU,KAAK,OAAO,IAAI,SAAS,QAAQ,SAAS,YAAY,YAAY;AAC9L;AAMA,SAAS,kBAAkB,gBAAgB;AACvC,QAAM,eAAe,CAAC;AACtB,OAAK,mBAAmB,QAAQ,mBAAmB,SAAS,SAAS,eAAe,YAAY,WAAc,mBAAmB,QAAQ,mBAAmB,SAAS,SAAS,eAAe,YAAY,GAAG;AACxM,UAAM,aAAa,IAAI,gBAAgB;AACvC,SAAK,mBAAmB,QAAQ,mBAAmB,SAAS,SAAS,eAAe,YAAY,GAAG;AAC/F,iBAAW,MAAM,WAAW,MAAM,GAAG,eAAe,OAAO;AAAA,IAC/D;AACA,QAAI,mBAAmB,QAAQ,mBAAmB,SAAS,SAAS,eAAe,QAAQ;AACvF,qBAAe,OAAO,iBAAiB,SAAS,MAAM;AAClD,mBAAW,MAAM;AAAA,MACrB,CAAC;AAAA,IACL;AACA,iBAAa,SAAS,WAAW;AAAA,EACrC;AACA,SAAO;AACX;AAsBA,SAAS,WAAW,UAAU;AAC1B,WAAS,OAAO,MAAM;AAClB,QAAI,SAAS,cAAc,SAAS,WAAW,SAAS,GAAG;AACvD,UAAI,SAAS,WAAW,SAAS,GAAG;AAChC,gBAAQ,KAAK,qBAAqB,SAAS,WAAW,MAAM,6HAEU;AAAA,MAC1E;AACA,UAAI,mBAAmB,SAAS,WAAW,CAAC,CAAC,GAAG;AAC5C,cAAM,IAAI,gCAAgC,GAAG,wBAAwB,QAAQ,CAAC,IAAI,QAAQ;AAAA,MAC9F;AACA,aAAO,QAAQ,QAAQ;AAAA,IAC3B,WACS,SAAS,gBAAgB;AAC9B,YAAM,IAAI,gCAAgC,uBAAuB,wBAAwB,QAAQ,CAAC,IAAI,QAAQ;AAAA,IAClH;AACA,WAAO;AAAA,EACX;AAIA,WAAS,eAAe,MAAM;AAC1B,QAAI,SAAS,cAAc,SAAS,WAAW,SAAS,GAAG;AACvD,UAAI,SAAS,WAAW,SAAS,GAAG;AAChC,gBAAQ,KAAK,qBAAqB,SAAS,WAAW,MAAM,uIAEU;AAAA,MAC1E;AACA,UAAI,mBAAmB,SAAS,WAAW,CAAC,CAAC,GAAG;AAC5C,cAAM,IAAI,gCAAgC,GAAG,wBAAwB,QAAQ,CAAC,IAAI,QAAQ;AAAA,MAC9F;AACA,cAAQ,KAAK,8EAC8B;AAC3C,aAAO,iBAAiB,QAAQ,EAAE,CAAC;AAAA,IACvC,WACS,SAAS,gBAAgB;AAC9B,YAAM,IAAI,gCAAgC,gCAAgC,wBAAwB,QAAQ,CAAC,IAAI,QAAQ;AAAA,IAC3H;AACA,WAAO;AAAA,EACX;AACA,WAAS,gBAAgB,MAAM;AAC3B,QAAI,SAAS,cAAc,SAAS,WAAW,SAAS,GAAG;AACvD,UAAI,SAAS,WAAW,SAAS,GAAG;AAChC,gBAAQ,KAAK,qBAAqB,SAAS,WAAW,MAAM,uIAEU;AAAA,MAC1E;AACA,UAAI,mBAAmB,SAAS,WAAW,CAAC,CAAC,GAAG;AAC5C,cAAM,IAAI,gCAAgC,GAAG,wBAAwB,QAAQ,CAAC,IAAI,QAAQ;AAAA,MAC9F;AACA,aAAO,iBAAiB,QAAQ;AAAA,IACpC,WACS,SAAS,gBAAgB;AAC9B,YAAM,IAAI,gCAAgC,gCAAgC,wBAAwB,QAAQ,CAAC,IAAI,QAAQ;AAAA,IAC3H;AACA,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAIA,SAAS,QAAQ,UAAU;AACvB,MAAI,IAAI,IAAI,IAAI;AAChB,QAAM,cAAc,CAAC;AACrB,OAAK,MAAM,KAAK,SAAS,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,CAAC,EAAE,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,OAAO;AACpI,eAAW,SAAS,MAAM,KAAK,SAAS,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,CAAC,EAAE,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,OAAO;AACnJ,UAAI,KAAK,MAAM;AACX,oBAAY,KAAK,KAAK,IAAI;AAAA,MAC9B;AACA,UAAI,KAAK,gBAAgB;AACrB,oBAAY,KAAK,UACb,KAAK,eAAe,WACpB,OACA,KAAK,eAAe,OACpB,SAAS;AAAA,MACjB;AACA,UAAI,KAAK,qBAAqB;AAC1B,oBAAY,KAAK,YAAY,KAAK,oBAAoB,SAAS,SAAS;AAAA,MAC5E;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,YAAY,SAAS,GAAG;AACxB,WAAO,YAAY,KAAK,EAAE;AAAA,EAC9B,OACK;AACD,WAAO;AAAA,EACX;AACJ;AAIA,SAAS,iBAAiB,UAAU;AAChC,MAAI,IAAI,IAAI,IAAI;AAChB,QAAM,gBAAgB,CAAC;AACvB,OAAK,MAAM,KAAK,SAAS,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,CAAC,EAAE,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,OAAO;AACpI,eAAW,SAAS,MAAM,KAAK,SAAS,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,CAAC,EAAE,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,OAAO;AACnJ,UAAI,KAAK,cAAc;AACnB,sBAAc,KAAK,KAAK,YAAY;AAAA,MACxC;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,cAAc,SAAS,GAAG;AAC1B,WAAO;AAAA,EACX,OACK;AACD,WAAO;AAAA,EACX;AACJ;AACA,IAAM,mBAAmB;AAAA,EACrB,aAAa;AAAA,EACb,aAAa;AAAA,EACb,aAAa;AACjB;AACA,SAAS,mBAAmB,WAAW;AACnC,SAAQ,CAAC,CAAC,UAAU,gBAChB,iBAAiB,SAAS,UAAU,YAAY;AACxD;AACA,SAAS,wBAAwB,UAAU;AACvC,MAAI,IAAI,IAAI;AACZ,MAAI,UAAU;AACd,OAAK,CAAC,SAAS,cAAc,SAAS,WAAW,WAAW,MACxD,SAAS,gBAAgB;AACzB,eAAW;AACX,SAAK,KAAK,SAAS,oBAAoB,QAAQ,OAAO,SAAS,SAAS,GAAG,aAAa;AACpF,iBAAW,WAAW,SAAS,eAAe,WAAW;AAAA,IAC7D;AACA,SAAK,KAAK,SAAS,oBAAoB,QAAQ,OAAO,SAAS,SAAS,GAAG,oBAAoB;AAC3F,iBAAW,KAAK,SAAS,eAAe,kBAAkB;AAAA,IAC9D;AAAA,EACJ,YACU,KAAK,SAAS,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,CAAC,GAAG;AAC5E,UAAM,iBAAiB,SAAS,WAAW,CAAC;AAC5C,QAAI,mBAAmB,cAAc,GAAG;AACpC,iBAAW,gCAAgC,eAAe,YAAY;AACtE,UAAI,eAAe,eAAe;AAC9B,mBAAW,KAAK,eAAe,aAAa;AAAA,MAChD;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AAmBA,SAAS,QAAQ,GAAG;AAChB,SAAO,gBAAgB,WAAW,KAAK,IAAI,GAAG,QAAQ,IAAI,QAAQ,CAAC;AACvE;AAEA,SAAS,iBAAiB,SAAS,YAAY,WAAW;AACtD,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,GAAGC,KAAI,CAAC;AAC5D,SAAO,IAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;AAAA,EAAM,GAAG;AACpH,WAAS,KAAK,GAAG;AAAE,QAAI,EAAE,CAAC,EAAG,GAAE,CAAC,IAAI,SAAU,GAAG;AAAE,aAAO,IAAI,QAAQ,SAAU,GAAG,GAAG;AAAE,QAAAA,GAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,KAAK,OAAO,GAAG,CAAC;AAAA,MAAG,CAAC;AAAA,IAAG;AAAA,EAAG;AACzI,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI;AAAE,WAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,IAAG,SAAS,GAAG;AAAE,aAAOA,GAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,IAAG;AAAA,EAAE;AACjF,WAAS,KAAK,GAAG;AAAE,MAAE,iBAAiB,UAAU,QAAQ,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,SAAS,MAAM,IAAI,OAAOA,GAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,EAAG;AACvH,WAAS,QAAQ,OAAO;AAAE,WAAO,QAAQ,KAAK;AAAA,EAAG;AACjD,WAAS,OAAO,OAAO;AAAE,WAAO,SAAS,KAAK;AAAA,EAAG;AACjD,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAGA,GAAE,MAAM,GAAGA,GAAE,OAAQ,QAAOA,GAAE,CAAC,EAAE,CAAC,GAAGA,GAAE,CAAC,EAAE,CAAC,CAAC;AAAA,EAAG;AACrF;AAuBA,IAAM,iBAAiB;AASvB,SAAS,cAAc,UAAU;AAC7B,QAAM,cAAc,SAAS,KAAK,YAAY,IAAI,kBAAkB,QAAQ,EAAE,OAAO,KAAK,CAAC,CAAC;AAC5F,QAAM,iBAAiB,kBAAkB,WAAW;AACpD,QAAM,CAAC,SAAS,OAAO,IAAI,eAAe,IAAI;AAC9C,SAAO;AAAA,IACH,QAAQ,yBAAyB,OAAO;AAAA,IACxC,UAAU,mBAAmB,OAAO;AAAA,EACxC;AACJ;AACA,eAAe,mBAAmB,QAAQ;AACtC,QAAM,eAAe,CAAC;AACtB,QAAM,SAAS,OAAO,UAAU;AAChC,SAAO,MAAM;AACT,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAC1C,QAAI,MAAM;AACN,aAAO,WAAW,mBAAmB,YAAY,CAAC;AAAA,IACtD;AACA,iBAAa,KAAK,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,yBAAyB,QAAQ;AACtC,SAAO,iBAAiB,MAAM,WAAW,UAAU,6BAA6B;AAC5E,UAAM,SAAS,OAAO,UAAU;AAChC,WAAO,MAAM;AACT,YAAM,EAAE,OAAO,KAAK,IAAI,MAAM,QAAQ,OAAO,KAAK,CAAC;AACnD,UAAI,MAAM;AACN;AAAA,MACJ;AACA,YAAM,MAAM,QAAQ,WAAW,KAAK,CAAC;AAAA,IACzC;AAAA,EACJ,CAAC;AACL;AAMA,SAAS,kBAAkB,aAAa;AACpC,QAAM,SAAS,YAAY,UAAU;AACrC,QAAM,SAAS,IAAI,eAAe;AAAA,IAC9B,MAAM,YAAY;AACd,UAAI,cAAc;AAClB,aAAO,KAAK;AACZ,eAAS,OAAO;AACZ,eAAO,OAAO,KAAK,EAAE,KAAK,CAAC,EAAE,OAAO,KAAK,MAAM;AAC3C,cAAI,MAAM;AACN,gBAAI,YAAY,KAAK,GAAG;AACpB,yBAAW,MAAM,IAAI,wBAAwB,wBAAwB,CAAC;AACtE;AAAA,YACJ;AACA,uBAAW,MAAM;AACjB;AAAA,UACJ;AACA,yBAAe;AACf,cAAI,QAAQ,YAAY,MAAM,cAAc;AAC5C,cAAI;AACJ,iBAAO,OAAO;AACV,gBAAI;AACA,+BAAiB,KAAK,MAAM,MAAM,CAAC,CAAC;AAAA,YACxC,SACO,GAAG;AACN,yBAAW,MAAM,IAAI,wBAAwB,iCAAiC,MAAM,CAAC,CAAC,GAAG,CAAC;AAC1F;AAAA,YACJ;AACA,uBAAW,QAAQ,cAAc;AACjC,0BAAc,YAAY,UAAU,MAAM,CAAC,EAAE,MAAM;AACnD,oBAAQ,YAAY,MAAM,cAAc;AAAA,UAC5C;AACA,iBAAO,KAAK;AAAA,QAChB,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AAKA,SAAS,mBAAmB,WAAW;AACnC,QAAM,eAAe,UAAU,UAAU,SAAS,CAAC;AACnD,QAAM,qBAAqB;AAAA,IACvB,gBAAgB,iBAAiB,QAAQ,iBAAiB,SAAS,SAAS,aAAa;AAAA,EAC7F;AACA,aAAW,YAAY,WAAW;AAC9B,QAAI,SAAS,YAAY;AACrB,iBAAW,aAAa,SAAS,YAAY;AACzC,cAAM,IAAI,UAAU;AACpB,YAAI,CAAC,mBAAmB,YAAY;AAChC,6BAAmB,aAAa,CAAC;AAAA,QACrC;AACA,YAAI,CAAC,mBAAmB,WAAW,CAAC,GAAG;AACnC,6BAAmB,WAAW,CAAC,IAAI;AAAA,YAC/B,OAAO,UAAU;AAAA,UACrB;AAAA,QACJ;AAEA,2BAAmB,WAAW,CAAC,EAAE,mBAC7B,UAAU;AACd,2BAAmB,WAAW,CAAC,EAAE,oBAC7B,UAAU;AACd,2BAAmB,WAAW,CAAC,EAAE,eAAe,UAAU;AAC1D,2BAAmB,WAAW,CAAC,EAAE,gBAC7B,UAAU;AACd,2BAAmB,WAAW,CAAC,EAAE,gBAC7B,UAAU;AAKd,YAAI,UAAU,WAAW,UAAU,QAAQ,OAAO;AAC9C,cAAI,CAAC,mBAAmB,WAAW,CAAC,EAAE,SAAS;AAC3C,+BAAmB,WAAW,CAAC,EAAE,UAAU;AAAA,cACvC,MAAM,UAAU,QAAQ,QAAQ;AAAA,cAChC,OAAO,CAAC;AAAA,YACZ;AAAA,UACJ;AACA,gBAAM,UAAU,CAAC;AACjB,qBAAW,QAAQ,UAAU,QAAQ,OAAO;AACxC,gBAAI,KAAK,MAAM;AACX,sBAAQ,OAAO,KAAK;AAAA,YACxB;AACA,gBAAI,KAAK,cAAc;AACnB,sBAAQ,eAAe,KAAK;AAAA,YAChC;AACA,gBAAI,KAAK,gBAAgB;AACrB,sBAAQ,iBAAiB,KAAK;AAAA,YAClC;AACA,gBAAI,KAAK,qBAAqB;AAC1B,sBAAQ,sBAAsB,KAAK;AAAA,YACvC;AACA,gBAAI,OAAO,KAAK,OAAO,EAAE,WAAW,GAAG;AACnC,sBAAQ,OAAO;AAAA,YACnB;AACA,+BAAmB,WAAW,CAAC,EAAE,QAAQ,MAAM,KAAK,OAAO;AAAA,UAC/D;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,SAAS,eAAe;AACxB,yBAAmB,gBAAgB,SAAS;AAAA,IAChD;AAAA,EACJ;AACA,SAAO;AACX;AAkBA,eAAe,sBAAsB,QAAQ,OAAO,QAAQ,gBAAgB;AACxE,QAAM,WAAW,MAAM;AAAA,IAAiB;AAAA,IAAO,KAAK;AAAA,IAAyB;AAAA;AAAA,IAChE;AAAA,IAAM,KAAK,UAAU,MAAM;AAAA,IAAG;AAAA,EAAc;AACzD,SAAO,cAAc,QAAQ;AACjC;AACA,eAAe,gBAAgB,QAAQ,OAAO,QAAQ,gBAAgB;AAClE,QAAM,WAAW,MAAM;AAAA,IAAiB;AAAA,IAAO,KAAK;AAAA,IAAkB;AAAA;AAAA,IACzD;AAAA,IAAO,KAAK,UAAU,MAAM;AAAA,IAAG;AAAA,EAAc;AAC1D,QAAM,eAAe,MAAM,SAAS,KAAK;AACzC,QAAM,mBAAmB,WAAW,YAAY;AAChD,SAAO;AAAA,IACH,UAAU;AAAA,EACd;AACJ;AAkBA,SAAS,wBAAwB,OAAO;AAEpC,MAAI,SAAS,MAAM;AACf,WAAO;AAAA,EACX,WACS,OAAO,UAAU,UAAU;AAChC,WAAO,EAAE,MAAM,UAAU,OAAO,CAAC,EAAE,MAAM,MAAM,CAAC,EAAE;AAAA,EACtD,WACS,MAAM,MAAM;AACjB,WAAO,EAAE,MAAM,UAAU,OAAO,CAAC,KAAK,EAAE;AAAA,EAC5C,WACS,MAAM,OAAO;AAClB,QAAI,CAAC,MAAM,MAAM;AACb,aAAO,EAAE,MAAM,UAAU,OAAO,MAAM,MAAM;AAAA,IAChD,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,SAAS;AAC/B,MAAI,WAAW,CAAC;AAChB,MAAI,OAAO,YAAY,UAAU;AAC7B,eAAW,CAAC,EAAE,MAAM,QAAQ,CAAC;AAAA,EACjC,OACK;AACD,eAAW,gBAAgB,SAAS;AAChC,UAAI,OAAO,iBAAiB,UAAU;AAClC,iBAAS,KAAK,EAAE,MAAM,aAAa,CAAC;AAAA,MACxC,OACK;AACD,iBAAS,KAAK,YAAY;AAAA,MAC9B;AAAA,IACJ;AAAA,EACJ;AACA,SAAO,+CAA+C,QAAQ;AAClE;AASA,SAAS,+CAA+C,OAAO;AAC3D,QAAM,cAAc,EAAE,MAAM,QAAQ,OAAO,CAAC,EAAE;AAC9C,QAAM,kBAAkB,EAAE,MAAM,YAAY,OAAO,CAAC,EAAE;AACtD,MAAI,iBAAiB;AACrB,MAAI,qBAAqB;AACzB,aAAW,QAAQ,OAAO;AACtB,QAAI,sBAAsB,MAAM;AAC5B,sBAAgB,MAAM,KAAK,IAAI;AAC/B,2BAAqB;AAAA,IACzB,OACK;AACD,kBAAY,MAAM,KAAK,IAAI;AAC3B,uBAAiB;AAAA,IACrB;AAAA,EACJ;AACA,MAAI,kBAAkB,oBAAoB;AACtC,UAAM,IAAI,wBAAwB,4HAA4H;AAAA,EAClK;AACA,MAAI,CAAC,kBAAkB,CAAC,oBAAoB;AACxC,UAAM,IAAI,wBAAwB,kDAAkD;AAAA,EACxF;AACA,MAAI,gBAAgB;AAChB,WAAO;AAAA,EACX;AACA,SAAO;AACX;AACA,SAAS,uBAAuB,QAAQ,aAAa;AACjD,MAAI;AACJ,MAAI,kCAAkC;AAAA,IAClC,OAAO,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY;AAAA,IAC7E,kBAAkB,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY;AAAA,IACxF,gBAAgB,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY;AAAA,IACtF,OAAO,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY;AAAA,IAC7E,YAAY,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY;AAAA,IAClF,mBAAmB,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY;AAAA,IACzF,gBAAgB,KAAK,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,IAClJ,UAAU,CAAC;AAAA,EACf;AACA,QAAM,iCAAiC,OAAO,0BAA0B;AACxE,MAAI,OAAO,UAAU;AACjB,QAAI,gCAAgC;AAChC,YAAM,IAAI,oCAAoC,mFAAmF;AAAA,IACrI;AACA,oCAAgC,WAAW,OAAO;AAAA,EACtD,WACS,gCAAgC;AACrC,sCAAkC,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,+BAA+B,GAAG,OAAO,sBAAsB;AAAA,EACrI,OACK;AAED,UAAM,UAAU,iBAAiB,MAAM;AACvC,oCAAgC,WAAW,CAAC,OAAO;AAAA,EACvD;AACA,SAAO,EAAE,wBAAwB,gCAAgC;AACrE;AACA,SAAS,2BAA2B,QAAQ;AACxC,MAAI;AACJ,MAAI,OAAO,UAAU;AACjB,uBAAmB;AAAA,EACvB,OACK;AAED,UAAM,UAAU,iBAAiB,MAAM;AACvC,uBAAmB,EAAE,UAAU,CAAC,OAAO,EAAE;AAAA,EAC7C;AACA,MAAI,OAAO,mBAAmB;AAC1B,qBAAiB,oBAAoB,wBAAwB,OAAO,iBAAiB;AAAA,EACzF;AACA,SAAO;AACX;AACA,SAAS,wBAAwB,QAAQ;AACrC,MAAI,OAAO,WAAW,YAAY,MAAM,QAAQ,MAAM,GAAG;AACrD,UAAM,UAAU,iBAAiB,MAAM;AACvC,WAAO,EAAE,QAAQ;AAAA,EACrB;AACA,SAAO;AACX;AAmBA,IAAM,oBAAoB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ;AACA,IAAM,uBAAuB;AAAA,EACzB,MAAM,CAAC,QAAQ,YAAY;AAAA,EAC3B,UAAU,CAAC,kBAAkB;AAAA,EAC7B,OAAO,CAAC,QAAQ,gBAAgB,kBAAkB,qBAAqB;AAAA;AAAA,EAEvE,QAAQ,CAAC,MAAM;AACnB;AACA,SAAS,oBAAoB,SAAS;AAClC,MAAI,cAAc;AAClB,aAAW,eAAe,SAAS;AAC/B,UAAM,EAAE,MAAM,MAAM,IAAI;AACxB,QAAI,CAAC,eAAe,SAAS,QAAQ;AACjC,YAAM,IAAI,wBAAwB,iDAAiD,IAAI,EAAE;AAAA,IAC7F;AACA,QAAI,CAAC,eAAe,SAAS,IAAI,GAAG;AAChC,YAAM,IAAI,wBAAwB,4CAA4C,IAAI,yBAAyB,KAAK,UAAU,cAAc,CAAC,EAAE;AAAA,IAC/I;AACA,QAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACvB,YAAM,IAAI,wBAAwB,6DAA6D;AAAA,IACnG;AACA,QAAI,MAAM,WAAW,GAAG;AACpB,YAAM,IAAI,wBAAwB,4CAA4C;AAAA,IAClF;AACA,UAAM,cAAc;AAAA,MAChB,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,qBAAqB;AAAA,IACzB;AACA,eAAW,QAAQ,OAAO;AACtB,iBAAW,OAAO,mBAAmB;AACjC,YAAI,OAAO,MAAM;AACb,sBAAY,GAAG,KAAK;AAAA,QACxB;AAAA,MACJ;AAAA,IACJ;AACA,UAAM,aAAa,qBAAqB,IAAI;AAC5C,eAAW,OAAO,mBAAmB;AACjC,UAAI,CAAC,WAAW,SAAS,GAAG,KAAK,YAAY,GAAG,IAAI,GAAG;AACnD,cAAM,IAAI,wBAAwB,sBAAsB,IAAI,oBAAoB,GAAG,QAAQ;AAAA,MAC/F;AAAA,IACJ;AACA,kBAAc;AAAA,EAClB;AACJ;AAqBA,IAAM,eAAe;AAOrB,IAAM,cAAN,MAAkB;AAAA,EACd,YAAY,QAAQ,OAAO,QAAQ,kBAAkB,CAAC,GAAG;AACrD,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,kBAAkB;AACvB,SAAK,WAAW,CAAC;AACjB,SAAK,eAAe,QAAQ,QAAQ;AACpC,SAAK,UAAU;AACf,QAAI,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,SAAS;AAChE,0BAAoB,OAAO,OAAO;AAClC,WAAK,WAAW,OAAO;AAAA,IAC3B;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,aAAa;AACf,UAAM,KAAK;AACX,WAAO,KAAK;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,YAAY,SAAS,iBAAiB,CAAC,GAAG;AAC5C,QAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,UAAM,KAAK;AACX,UAAM,aAAa,iBAAiB,OAAO;AAC3C,UAAM,yBAAyB;AAAA,MAC3B,iBAAiB,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAC3E,mBAAmB,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAC7E,QAAQ,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAClE,aAAa,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MACvE,oBAAoB,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAC9E,gBAAgB,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAC1E,UAAU,CAAC,GAAG,KAAK,UAAU,UAAU;AAAA,IAC3C;AACA,UAAM,4BAA4B,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,eAAe,GAAG,cAAc;AACvG,QAAI;AAEJ,SAAK,eAAe,KAAK,aACpB,KAAK,MAAM,gBAAgB,KAAK,SAAS,KAAK,OAAO,wBAAwB,yBAAyB,CAAC,EACvG,KAAK,CAAC,WAAW;AAClB,UAAIC;AACJ,UAAI,OAAO,SAAS,cAChB,OAAO,SAAS,WAAW,SAAS,GAAG;AACvC,aAAK,SAAS,KAAK,UAAU;AAC7B,cAAM,kBAAkB,OAAO,OAAO;AAAA,UAAE,OAAO,CAAC;AAAA;AAAA,UAE5C,MAAM;AAAA,QAAQ,IAAIA,MAAK,OAAO,SAAS,gBAAgB,QAAQA,QAAO,SAAS,SAASA,IAAG,CAAC,EAAE,OAAO;AACzG,aAAK,SAAS,KAAK,eAAe;AAAA,MACtC,OACK;AACD,cAAM,oBAAoB,wBAAwB,OAAO,QAAQ;AACjE,YAAI,mBAAmB;AACnB,kBAAQ,KAAK,mCAAmC,iBAAiB,wCAAwC;AAAA,QAC7G;AAAA,MACJ;AACA,oBAAc;AAAA,IAClB,CAAC;AACD,UAAM,KAAK;AACX,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,kBAAkB,SAAS,iBAAiB,CAAC,GAAG;AAClD,QAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,UAAM,KAAK;AACX,UAAM,aAAa,iBAAiB,OAAO;AAC3C,UAAM,yBAAyB;AAAA,MAC3B,iBAAiB,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAC3E,mBAAmB,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAC7E,QAAQ,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAClE,aAAa,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MACvE,oBAAoB,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAC9E,gBAAgB,KAAK,KAAK,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MAC1E,UAAU,CAAC,GAAG,KAAK,UAAU,UAAU;AAAA,IAC3C;AACA,UAAM,4BAA4B,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,eAAe,GAAG,cAAc;AACvG,UAAM,gBAAgB,sBAAsB,KAAK,SAAS,KAAK,OAAO,wBAAwB,yBAAyB;AAEvH,SAAK,eAAe,KAAK,aACpB,KAAK,MAAM,aAAa,EAGxB,MAAM,CAAC,aAAa;AACrB,YAAM,IAAI,MAAM,YAAY;AAAA,IAChC,CAAC,EACI,KAAK,CAAC,iBAAiB,aAAa,QAAQ,EAC5C,KAAK,CAAC,aAAa;AACpB,UAAI,SAAS,cAAc,SAAS,WAAW,SAAS,GAAG;AACvD,aAAK,SAAS,KAAK,UAAU;AAC7B,cAAM,kBAAkB,OAAO,OAAO,CAAC,GAAG,SAAS,WAAW,CAAC,EAAE,OAAO;AAExE,YAAI,CAAC,gBAAgB,MAAM;AACvB,0BAAgB,OAAO;AAAA,QAC3B;AACA,aAAK,SAAS,KAAK,eAAe;AAAA,MACtC,OACK;AACD,cAAM,oBAAoB,wBAAwB,QAAQ;AAC1D,YAAI,mBAAmB;AACnB,kBAAQ,KAAK,yCAAyC,iBAAiB,wCAAwC;AAAA,QACnH;AAAA,MACJ;AAAA,IACJ,CAAC,EACI,MAAM,CAAC,MAAM;AAId,UAAI,EAAE,YAAY,cAAc;AAG5B,gBAAQ,MAAM,CAAC;AAAA,MACnB;AAAA,IACJ,CAAC;AACD,WAAO;AAAA,EACX;AACJ;AAkBA,eAAe,YAAY,QAAQ,OAAO,QAAQ,sBAAsB;AACpE,QAAM,WAAW,MAAM,iBAAiB,OAAO,KAAK,cAAc,QAAQ,OAAO,KAAK,UAAU,MAAM,GAAG,oBAAoB;AAC7H,SAAO,SAAS,KAAK;AACzB;AAkBA,eAAe,aAAa,QAAQ,OAAO,QAAQ,gBAAgB;AAC/D,QAAM,WAAW,MAAM,iBAAiB,OAAO,KAAK,eAAe,QAAQ,OAAO,KAAK,UAAU,MAAM,GAAG,cAAc;AACxH,SAAO,SAAS,KAAK;AACzB;AACA,eAAe,mBAAmB,QAAQ,OAAO,QAAQ,gBAAgB;AACrE,QAAM,oBAAoB,OAAO,SAAS,IAAI,CAAC,YAAY;AACvD,WAAO,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,MAAM,CAAC;AAAA,EAC9D,CAAC;AACD,QAAM,WAAW,MAAM,iBAAiB,OAAO,KAAK,sBAAsB,QAAQ,OAAO,KAAK,UAAU,EAAE,UAAU,kBAAkB,CAAC,GAAG,cAAc;AACxJ,SAAO,SAAS,KAAK;AACzB;AAsBA,IAAM,kBAAN,MAAsB;AAAA,EAClB,YAAY,QAAQ,aAAa,kBAAkB,CAAC,GAAG;AACnD,SAAK,SAAS;AACd,SAAK,kBAAkB;AACvB,QAAI,YAAY,MAAM,SAAS,GAAG,GAAG;AAEjC,WAAK,QAAQ,YAAY;AAAA,IAC7B,OACK;AAED,WAAK,QAAQ,UAAU,YAAY,KAAK;AAAA,IAC5C;AACA,SAAK,mBAAmB,YAAY,oBAAoB,CAAC;AACzD,SAAK,iBAAiB,YAAY,kBAAkB,CAAC;AACrD,SAAK,QAAQ,YAAY;AACzB,SAAK,aAAa,YAAY;AAC9B,SAAK,oBAAoB,wBAAwB,YAAY,iBAAiB;AAC9E,SAAK,gBAAgB,YAAY;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,gBAAgB,SAAS,iBAAiB,CAAC,GAAG;AAChD,QAAI;AACJ,UAAM,kBAAkB,2BAA2B,OAAO;AAC1D,UAAM,gCAAgC,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,eAAe,GAAG,cAAc;AAC3G,WAAO,gBAAgB,KAAK,QAAQ,KAAK,OAAO,OAAO,OAAO,EAAE,kBAAkB,KAAK,kBAAkB,gBAAgB,KAAK,gBAAgB,OAAO,KAAK,OAAO,YAAY,KAAK,YAAY,mBAAmB,KAAK,mBAAmB,gBAAgB,KAAK,KAAK,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,GAAG,eAAe,GAAG,6BAA6B;AAAA,EACrX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,MAAM,sBAAsB,SAAS,iBAAiB,CAAC,GAAG;AACtD,QAAI;AACJ,UAAM,kBAAkB,2BAA2B,OAAO;AAC1D,UAAM,gCAAgC,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,eAAe,GAAG,cAAc;AAC3G,WAAO,sBAAsB,KAAK,QAAQ,KAAK,OAAO,OAAO,OAAO,EAAE,kBAAkB,KAAK,kBAAkB,gBAAgB,KAAK,gBAAgB,OAAO,KAAK,OAAO,YAAY,KAAK,YAAY,mBAAmB,KAAK,mBAAmB,gBAAgB,KAAK,KAAK,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,GAAG,eAAe,GAAG,6BAA6B;AAAA,EAC3X;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU,iBAAiB;AACvB,QAAI;AACJ,WAAO,IAAI,YAAY,KAAK,QAAQ,KAAK,OAAO,OAAO,OAAO,EAAE,kBAAkB,KAAK,kBAAkB,gBAAgB,KAAK,gBAAgB,OAAO,KAAK,OAAO,YAAY,KAAK,YAAY,mBAAmB,KAAK,mBAAmB,gBAAgB,KAAK,KAAK,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,GAAG,eAAe,GAAG,KAAK,eAAe;AAAA,EAC5W;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,YAAY,SAAS,iBAAiB,CAAC,GAAG;AAC5C,UAAM,kBAAkB,uBAAuB,SAAS;AAAA,MACpD,OAAO,KAAK;AAAA,MACZ,kBAAkB,KAAK;AAAA,MACvB,gBAAgB,KAAK;AAAA,MACrB,OAAO,KAAK;AAAA,MACZ,YAAY,KAAK;AAAA,MACjB,mBAAmB,KAAK;AAAA,MACxB,eAAe,KAAK;AAAA,IACxB,CAAC;AACD,UAAM,gCAAgC,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,eAAe,GAAG,cAAc;AAC3G,WAAO,YAAY,KAAK,QAAQ,KAAK,OAAO,iBAAiB,6BAA6B;AAAA,EAC9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,aAAa,SAAS,iBAAiB,CAAC,GAAG;AAC7C,UAAM,kBAAkB,wBAAwB,OAAO;AACvD,UAAM,gCAAgC,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,eAAe,GAAG,cAAc;AAC3G,WAAO,aAAa,KAAK,QAAQ,KAAK,OAAO,iBAAiB,6BAA6B;AAAA,EAC/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,mBAAmB,0BAA0B,iBAAiB,CAAC,GAAG;AACpE,UAAM,gCAAgC,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,eAAe,GAAG,cAAc;AAC3G,WAAO,mBAAmB,KAAK,QAAQ,KAAK,OAAO,0BAA0B,6BAA6B;AAAA,EAC9G;AACJ;AAsBA,IAAM,qBAAN,MAAyB;AAAA,EACrB,YAAY,QAAQ;AAChB,SAAK,SAAS;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB,aAAa,gBAAgB;AAC5C,QAAI,CAAC,YAAY,OAAO;AACpB,YAAM,IAAI,wBAAwB,0FACiC;AAAA,IACvE;AACA,WAAO,IAAI,gBAAgB,KAAK,QAAQ,aAAa,cAAc;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA,EAIA,oCAAoC,eAAe,aAAa,gBAAgB;AAC5E,QAAI,CAAC,cAAc,MAAM;AACrB,YAAM,IAAI,oCAAoC,6CAA6C;AAAA,IAC/F;AACA,QAAI,CAAC,cAAc,OAAO;AACtB,YAAM,IAAI,oCAAoC,8CAA8C;AAAA,IAChG;AAKA,UAAM,uBAAuB,CAAC,SAAS,mBAAmB;AAC1D,eAAW,OAAO,sBAAsB;AACpC,WAAK,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,GAAG,MAC1E,cAAc,GAAG,MAChB,gBAAgB,QAAQ,gBAAgB,SAAS,SAAS,YAAY,GAAG,OAAO,cAAc,GAAG,GAAG;AACrG,YAAI,QAAQ,SAAS;AACjB,gBAAM,kBAAkB,YAAY,MAAM,WAAW,SAAS,IACxD,YAAY,MAAM,QAAQ,WAAW,EAAE,IACvC,YAAY;AAClB,gBAAM,oBAAoB,cAAc,MAAM,WAAW,SAAS,IAC5D,cAAc,MAAM,QAAQ,WAAW,EAAE,IACzC,cAAc;AACpB,cAAI,oBAAoB,mBAAmB;AACvC;AAAA,UACJ;AAAA,QACJ;AACA,cAAM,IAAI,oCAAoC,wBAAwB,GAAG,+BAChE,YAAY,GAAG,CAAC,wBAAwB,cAAc,GAAG,CAAC,GAAG;AAAA,MAC1E;AAAA,IACJ;AACA,UAAM,uBAAuB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,WAAW,GAAG,EAAE,OAAO,cAAc,OAAO,OAAO,cAAc,OAAO,YAAY,cAAc,YAAY,mBAAmB,cAAc,mBAAmB,cAAc,CAAC;AAC9O,WAAO,IAAI,gBAAgB,KAAK,QAAQ,sBAAsB,cAAc;AAAA,EAChF;AACJ;;;AC36CA,IAAM,IAAI;AAAV,IAAqD,IAAI;AACzD,SAAS,EAAE,GAAG,GAAG,GAAG,GAAG;AACrB,QAAM,EAAE,MAAM,GAAG,SAAS,GAAG,oBAAoB,GAAG,UAAU,EAAE,IAAI;AACpE,MAAI,IAAI,WAAW,CAAC,OAAO,CAAC,iBAAiB,CAAC,8FAA8F,CAAC;AAC7I,SAAO,IAAI,KAAK,0BAA0B,CAAC,OAAO,KAAK,2DAA2D,CAAC,KAAK,KAAK,EAAE,SAAS,MAAM,KAAK,8DAA8D,EAAE,KAAK,IAAI,CAAC,iDAAiD,KAAK,uRAAuR,KAAK;AAAA;AAAA,cAEniB,CAAC,KAAK,KAAK;AAAA,EACvB,CAAC,cAAc;AACjB;AACA,SAAS,EAAE,EAAE,QAAQ,GAAG,OAAO,GAAG,mBAAmB,GAAG,OAAO,GAAG,gBAAgB,EAAE,GAAG;AACrF,MAAI,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,WAAW,CAAC,EAAE,sBAAsB,CAAC,EAAE;AAC7D,UAAM,IAAI,MAAM,oGAAoG;AACtH,OAAK,QAAQ,KAAK,wEAAwE;AAC1F,QAAM,IAAI,IAAI,mBAAE,CAAC,EAAE,mBAAmB,EAAE,OAAO,EAAE,CAAC;AAClD,SAAO;AAAA,IACL,WAAW,OAAO,MAAM;AACtB,UAAI,IAAI;AACR,YAAM,IAAI,EAAE,CAAC;AACb,YAAM,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC;AACtB,UAAI;AACF,gBAAQ,OAAO,MAAM,EAAE,gBAAgB;AAAA,UACrC,UAAU,CAAC,EAAE,MAAM,QAAQ,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AAAA,UACjD,kBAAkB;AAAA,YAChB,iBAAiB;AAAA;AAAA,YAEjB,aAAa;AAAA;AAAA,YAEb,MAAM;AAAA;AAAA,YAEN,MAAM;AAAA;AAAA,UAER;AAAA,QACF,CAAC,GAAG,UAAU,KAAK;AAAA,MACrB,SAAS,GAAG;AACV,eAAO,QAAQ,MAAM,wCAAwC,CAAC,GAAG,EAAE,SAAS,kCAAkC,EAAE,QAAQ,SAAS,KAAK,KAAK,QAAQ,MAAM,qBAAqB,CAAC,GAAG,GAAG,mCAAmC,CAAC,yFAAyF;AAAA,MACpT;AAAA,IACF;AAAA,IACA,eAAe,MAAM,EAAE;AAAA,IACvB,gBAAgB,MAAM;AAAA,EACxB;AACF;AACA,IAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA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",
  "names": ["SchemaType", "ExecutableCodeLanguage", "Outcome", "HarmCategory", "HarmBlockThreshold", "HarmProbability", "BlockReason", "FinishReason", "TaskType", "FunctionCallingMode", "DynamicRetrievalMode", "Task", "q", "_a"]
}
